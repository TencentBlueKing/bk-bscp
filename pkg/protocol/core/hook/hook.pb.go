// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: hook.proto

package pbhook

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Hook source resource reference: pkg/dal/table/hook.go
type Hook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *HookSpec              `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment    *HookAttachment        `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.Revision         `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hook) Reset() {
	*x = Hook{}
	mi := &file_hook_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hook) ProtoMessage() {}

func (x *Hook) ProtoReflect() protoreflect.Message {
	mi := &file_hook_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hook.ProtoReflect.Descriptor instead.
func (*Hook) Descriptor() ([]byte, []int) {
	return file_hook_proto_rawDescGZIP(), []int{0}
}

func (x *Hook) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Hook) GetSpec() *HookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Hook) GetAttachment() *HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *Hook) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// HookSpec source resource reference: pkg/dal/table/hook.go
type HookSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Memo          string                 `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	RevisionName  string                 `protobuf:"bytes,6,opt,name=revision_name,json=revisionName,proto3" json:"revision_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HookSpec) Reset() {
	*x = HookSpec{}
	mi := &file_hook_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HookSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookSpec) ProtoMessage() {}

func (x *HookSpec) ProtoReflect() protoreflect.Message {
	mi := &file_hook_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookSpec.ProtoReflect.Descriptor instead.
func (*HookSpec) Descriptor() ([]byte, []int) {
	return file_hook_proto_rawDescGZIP(), []int{1}
}

func (x *HookSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HookSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HookSpec) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *HookSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *HookSpec) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HookSpec) GetRevisionName() string {
	if x != nil {
		return x.RevisionName
	}
	return ""
}

// HookAttachment source resource reference: pkg/dal/table/hook.go
type HookAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HookAttachment) Reset() {
	*x = HookAttachment{}
	mi := &file_hook_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HookAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAttachment) ProtoMessage() {}

func (x *HookAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_hook_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAttachment.ProtoReflect.Descriptor instead.
func (*HookAttachment) Descriptor() ([]byte, []int) {
	return file_hook_proto_rawDescGZIP(), []int{2}
}

func (x *HookAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

// ListConfigItemCounts source resource reference: pkg/dal/table/config_item.go
type ListHookTagCounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         uint32                 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Tag           string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Count         uint32                 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	UpdateAt      string                 `protobuf:"bytes,4,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHookTagCounts) Reset() {
	*x = ListHookTagCounts{}
	mi := &file_hook_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHookTagCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookTagCounts) ProtoMessage() {}

func (x *ListHookTagCounts) ProtoReflect() protoreflect.Message {
	mi := &file_hook_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookTagCounts.ProtoReflect.Descriptor instead.
func (*ListHookTagCounts) Descriptor() ([]byte, []int) {
	return file_hook_proto_rawDescGZIP(), []int{3}
}

func (x *ListHookTagCounts) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListHookTagCounts) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ListHookTagCounts) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListHookTagCounts) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type CountHookTags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           string                 `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Counts        uint32                 `protobuf:"varint,2,opt,name=counts,proto3" json:"counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountHookTags) Reset() {
	*x = CountHookTags{}
	mi := &file_hook_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountHookTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountHookTags) ProtoMessage() {}

func (x *CountHookTags) ProtoReflect() protoreflect.Message {
	mi := &file_hook_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountHookTags.ProtoReflect.Descriptor instead.
func (*CountHookTags) Descriptor() ([]byte, []int) {
	return file_hook_proto_rawDescGZIP(), []int{4}
}

func (x *CountHookTags) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CountHookTags) GetCounts() uint32 {
	if x != nil {
		return x.Counts
	}
	return 0
}

var File_hook_proto protoreflect.FileDescriptor

const file_hook_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"hook.proto\x12\x06pbhook\x1a!pkg/protocol/core/base/base.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xb1\x01\n" +
	"\x04Hook\x12\x1d\n" +
	"\x02id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b脚本IDR\x02id\x12$\n" +
	"\x04spec\x18\x02 \x01(\v2\x10.pbhook.HookSpecR\x04spec\x126\n" +
	"\n" +
	"attachment\x18\x03 \x01(\v2\x16.pbhook.HookAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\x04 \x01(\v2\x10.pbbase.RevisionR\brevision\"\xb4\x02\n" +
	"\bHookSpec\x12%\n" +
	"\x04name\x18\x01 \x01(\tB\x11\x92A\x0e2\f脚本名称R\x04name\x12K\n" +
	"\x04type\x18\x02 \x01(\tB7\x92A422脚本类型：(shell、python、bat、powershell)R\x04type\x12%\n" +
	"\x04tags\x18\x03 \x03(\tB\x11\x92A\x0e2\f脚本标签R\x04tags\x12%\n" +
	"\x04memo\x18\x04 \x01(\tB\x11\x92A\x0e2\f脚本描述R\x04memo\x12+\n" +
	"\acontent\x18\x05 \x01(\tB\x11\x92A\x0e2\f脚本内容R\acontent\x129\n" +
	"\rrevision_name\x18\x06 \x01(\tB\x14\x92A\x112\x0f脚本版本号R\frevisionName\"6\n" +
	"\x0eHookAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\"\xb1\x01\n" +
	"\x11ListHookTagCounts\x12$\n" +
	"\x06app_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b服务IDR\x05appId\x12#\n" +
	"\x03tag\x18\x02 \x01(\tB\x11\x92A\x0e2\f脚本标签R\x03tag\x12!\n" +
	"\x05count\x18\x03 \x01(\rB\v\x92A\b2\x06总数R\x05count\x12.\n" +
	"\tupdate_at\x18\x04 \x01(\tB\x11\x92A\x0e2\f更新时间R\bupdateAt\"Y\n" +
	"\rCountHookTags\x12#\n" +
	"\x03tag\x18\x01 \x01(\tB\x11\x92A\x0e2\f脚本标签R\x03tag\x12#\n" +
	"\x06counts\x18\x02 \x01(\rB\v\x92A\b2\x06总数R\x06countsBBZ@github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/hook;pbhookb\x06proto3"

var (
	file_hook_proto_rawDescOnce sync.Once
	file_hook_proto_rawDescData []byte
)

func file_hook_proto_rawDescGZIP() []byte {
	file_hook_proto_rawDescOnce.Do(func() {
		file_hook_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hook_proto_rawDesc), len(file_hook_proto_rawDesc)))
	})
	return file_hook_proto_rawDescData
}

var file_hook_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_hook_proto_goTypes = []any{
	(*Hook)(nil),              // 0: pbhook.Hook
	(*HookSpec)(nil),          // 1: pbhook.HookSpec
	(*HookAttachment)(nil),    // 2: pbhook.HookAttachment
	(*ListHookTagCounts)(nil), // 3: pbhook.ListHookTagCounts
	(*CountHookTags)(nil),     // 4: pbhook.CountHookTags
	(*base.Revision)(nil),     // 5: pbbase.Revision
}
var file_hook_proto_depIdxs = []int32{
	1, // 0: pbhook.Hook.spec:type_name -> pbhook.HookSpec
	2, // 1: pbhook.Hook.attachment:type_name -> pbhook.HookAttachment
	5, // 2: pbhook.Hook.revision:type_name -> pbbase.Revision
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_hook_proto_init() }
func file_hook_proto_init() {
	if File_hook_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hook_proto_rawDesc), len(file_hook_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hook_proto_goTypes,
		DependencyIndexes: file_hook_proto_depIdxs,
		MessageInfos:      file_hook_proto_msgTypes,
	}.Build()
	File_hook_proto = out.File
	file_hook_proto_goTypes = nil
	file_hook_proto_depIdxs = nil
}
