// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: released_ci.proto

package pbrci

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	commit "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/commit"
	config_item "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/config-item"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReleasedConfigItem source resource reference: pkg/dal/table/release_ci.go
type ReleasedConfigItem struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Id            uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReleaseId     uint32                            `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	CommitId      uint32                            `protobuf:"varint,3,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	CommitSpec    *commit.ReleasedCommitSpec        `protobuf:"bytes,4,opt,name=commit_spec,json=commitSpec,proto3" json:"commit_spec,omitempty"`
	ConfigItemId  uint32                            `protobuf:"varint,5,opt,name=config_item_id,json=configItemId,proto3" json:"config_item_id,omitempty"`
	Spec          *config_item.ConfigItemSpec       `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment    *config_item.ConfigItemAttachment `protobuf:"bytes,7,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.Revision                    `protobuf:"bytes,8,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleasedConfigItem) Reset() {
	*x = ReleasedConfigItem{}
	mi := &file_released_ci_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasedConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasedConfigItem) ProtoMessage() {}

func (x *ReleasedConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_released_ci_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasedConfigItem.ProtoReflect.Descriptor instead.
func (*ReleasedConfigItem) Descriptor() ([]byte, []int) {
	return file_released_ci_proto_rawDescGZIP(), []int{0}
}

func (x *ReleasedConfigItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReleasedConfigItem) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *ReleasedConfigItem) GetCommitId() uint32 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

func (x *ReleasedConfigItem) GetCommitSpec() *commit.ReleasedCommitSpec {
	if x != nil {
		return x.CommitSpec
	}
	return nil
}

func (x *ReleasedConfigItem) GetConfigItemId() uint32 {
	if x != nil {
		return x.ConfigItemId
	}
	return 0
}

func (x *ReleasedConfigItem) GetSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ReleasedConfigItem) GetAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *ReleasedConfigItem) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

var File_released_ci_proto protoreflect.FileDescriptor

const file_released_ci_proto_rawDesc = "" +
	"\n" +
	"\x11released_ci.proto\x12\x05pbrci\x1a!pkg/protocol/core/base/base.proto\x1a%pkg/protocol/core/commit/commit.proto\x1a/pkg/protocol/core/config-item/config_item.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xce\x03\n" +
	"\x12ReleasedConfigItem\x122\n" +
	"\x02id\x18\x01 \x01(\rB\"\x92A\x1f2\x1d服务版本文件配置项IDR\x02id\x122\n" +
	"\n" +
	"release_id\x18\x02 \x01(\rB\x13\x92A\x102\x0e服务版本IDR\treleaseId\x12?\n" +
	"\tcommit_id\x18\x03 \x01(\rB\"\x92A\x1f2\x1d文件配置项版本记录IDR\bcommitId\x12=\n" +
	"\vcommit_spec\x18\x04 \x01(\v2\x1c.pbcommit.ReleasedCommitSpecR\n" +
	"commitSpec\x12<\n" +
	"\x0econfig_item_id\x18\x05 \x01(\rB\x16\x92A\x132\x11文件配置项IDR\fconfigItemId\x12(\n" +
	"\x04spec\x18\x06 \x01(\v2\x14.pbci.ConfigItemSpecR\x04spec\x12:\n" +
	"\n" +
	"attachment\x18\a \x01(\v2\x1a.pbci.ConfigItemAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\b \x01(\v2\x10.pbbase.RevisionR\brevisionBHZFgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/released-ci;pbrcib\x06proto3"

var (
	file_released_ci_proto_rawDescOnce sync.Once
	file_released_ci_proto_rawDescData []byte
)

func file_released_ci_proto_rawDescGZIP() []byte {
	file_released_ci_proto_rawDescOnce.Do(func() {
		file_released_ci_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_released_ci_proto_rawDesc), len(file_released_ci_proto_rawDesc)))
	})
	return file_released_ci_proto_rawDescData
}

var file_released_ci_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_released_ci_proto_goTypes = []any{
	(*ReleasedConfigItem)(nil),               // 0: pbrci.ReleasedConfigItem
	(*commit.ReleasedCommitSpec)(nil),        // 1: pbcommit.ReleasedCommitSpec
	(*config_item.ConfigItemSpec)(nil),       // 2: pbci.ConfigItemSpec
	(*config_item.ConfigItemAttachment)(nil), // 3: pbci.ConfigItemAttachment
	(*base.Revision)(nil),                    // 4: pbbase.Revision
}
var file_released_ci_proto_depIdxs = []int32{
	1, // 0: pbrci.ReleasedConfigItem.commit_spec:type_name -> pbcommit.ReleasedCommitSpec
	2, // 1: pbrci.ReleasedConfigItem.spec:type_name -> pbci.ConfigItemSpec
	3, // 2: pbrci.ReleasedConfigItem.attachment:type_name -> pbci.ConfigItemAttachment
	4, // 3: pbrci.ReleasedConfigItem.revision:type_name -> pbbase.Revision
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_released_ci_proto_init() }
func file_released_ci_proto_init() {
	if File_released_ci_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_released_ci_proto_rawDesc), len(file_released_ci_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_released_ci_proto_goTypes,
		DependencyIndexes: file_released_ci_proto_depIdxs,
		MessageInfos:      file_released_ci_proto_msgTypes,
	}.Build()
	File_released_ci_proto = out.File
	file_released_ci_proto_goTypes = nil
	file_released_ci_proto_depIdxs = nil
}
