// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: app_template_binding.proto

package pbatb

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AppTemplateBinding source resource reference: pkg/dal/table/app_template_binding.go
type AppTemplateBinding struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Id            uint32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *AppTemplateBindingSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment    *AppTemplateBindingAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.Revision                `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppTemplateBinding) Reset() {
	*x = AppTemplateBinding{}
	mi := &file_app_template_binding_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppTemplateBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTemplateBinding) ProtoMessage() {}

func (x *AppTemplateBinding) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTemplateBinding.ProtoReflect.Descriptor instead.
func (*AppTemplateBinding) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{0}
}

func (x *AppTemplateBinding) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppTemplateBinding) GetSpec() *AppTemplateBindingSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AppTemplateBinding) GetAttachment() *AppTemplateBindingAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *AppTemplateBinding) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// AppTemplateBindingSpec source resource reference: pkg/dal/table/app_template_binding.go
type AppTemplateBindingSpec struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TemplateSpaceIds    []uint32               `protobuf:"varint,1,rep,packed,name=template_space_ids,json=templateSpaceIds,proto3" json:"template_space_ids,omitempty"`
	TemplateSetIds      []uint32               `protobuf:"varint,2,rep,packed,name=template_set_ids,json=templateSetIds,proto3" json:"template_set_ids,omitempty"`
	TemplateIds         []uint32               `protobuf:"varint,3,rep,packed,name=template_ids,json=templateIds,proto3" json:"template_ids,omitempty"`
	TemplateRevisionIds []uint32               `protobuf:"varint,4,rep,packed,name=template_revision_ids,json=templateRevisionIds,proto3" json:"template_revision_ids,omitempty"`
	LatestTemplateIds   []uint32               `protobuf:"varint,5,rep,packed,name=latest_template_ids,json=latestTemplateIds,proto3" json:"latest_template_ids,omitempty"`
	Bindings            []*TemplateBinding     `protobuf:"bytes,6,rep,name=bindings,proto3" json:"bindings,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AppTemplateBindingSpec) Reset() {
	*x = AppTemplateBindingSpec{}
	mi := &file_app_template_binding_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppTemplateBindingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTemplateBindingSpec) ProtoMessage() {}

func (x *AppTemplateBindingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTemplateBindingSpec.ProtoReflect.Descriptor instead.
func (*AppTemplateBindingSpec) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{1}
}

func (x *AppTemplateBindingSpec) GetTemplateSpaceIds() []uint32 {
	if x != nil {
		return x.TemplateSpaceIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetTemplateSetIds() []uint32 {
	if x != nil {
		return x.TemplateSetIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetTemplateIds() []uint32 {
	if x != nil {
		return x.TemplateIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetTemplateRevisionIds() []uint32 {
	if x != nil {
		return x.TemplateRevisionIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetLatestTemplateIds() []uint32 {
	if x != nil {
		return x.LatestTemplateIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetBindings() []*TemplateBinding {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// TemplateBinding source resource reference: pkg/dal/table/app_template_binding.go
type TemplateBinding struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	TemplateSetId     uint32                     `protobuf:"varint,1,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateRevisions []*TemplateRevisionBinding `protobuf:"bytes,2,rep,name=template_revisions,json=templateRevisions,proto3" json:"template_revisions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TemplateBinding) Reset() {
	*x = TemplateBinding{}
	mi := &file_app_template_binding_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateBinding) ProtoMessage() {}

func (x *TemplateBinding) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateBinding.ProtoReflect.Descriptor instead.
func (*TemplateBinding) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{2}
}

func (x *TemplateBinding) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *TemplateBinding) GetTemplateRevisions() []*TemplateRevisionBinding {
	if x != nil {
		return x.TemplateRevisions
	}
	return nil
}

type TemplateRevisionBinding struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TemplateId         uint32                 `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateRevisionId uint32                 `protobuf:"varint,2,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest           bool                   `protobuf:"varint,3,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TemplateRevisionBinding) Reset() {
	*x = TemplateRevisionBinding{}
	mi := &file_app_template_binding_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRevisionBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevisionBinding) ProtoMessage() {}

func (x *TemplateRevisionBinding) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevisionBinding.ProtoReflect.Descriptor instead.
func (*TemplateRevisionBinding) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{3}
}

func (x *TemplateRevisionBinding) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *TemplateRevisionBinding) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *TemplateRevisionBinding) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

// AppTemplateBindingAttachment source resource reference: pkg/dal/table/app_template_binding.go
type AppTemplateBindingAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId         uint32                 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppTemplateBindingAttachment) Reset() {
	*x = AppTemplateBindingAttachment{}
	mi := &file_app_template_binding_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppTemplateBindingAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTemplateBindingAttachment) ProtoMessage() {}

func (x *AppTemplateBindingAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTemplateBindingAttachment.ProtoReflect.Descriptor instead.
func (*AppTemplateBindingAttachment) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{4}
}

func (x *AppTemplateBindingAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AppTemplateBindingAttachment) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

// AppBoundTmplRevisionGroupBySet is app bound template revision group by template set
type AppBoundTmplRevisionGroupBySet struct {
	state             protoimpl.MessageState                                  `protogen:"open.v1"`
	TemplateSpaceId   uint32                                                  `protobuf:"varint,1,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateSpaceName string                                                  `protobuf:"bytes,2,opt,name=template_space_name,json=templateSpaceName,proto3" json:"template_space_name,omitempty"`
	TemplateSetId     uint32                                                  `protobuf:"varint,3,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName   string                                                  `protobuf:"bytes,4,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateRevisions []*AppBoundTmplRevisionGroupBySetTemplateRevisionDetail `protobuf:"bytes,5,rep,name=template_revisions,json=templateRevisions,proto3" json:"template_revisions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AppBoundTmplRevisionGroupBySet) Reset() {
	*x = AppBoundTmplRevisionGroupBySet{}
	mi := &file_app_template_binding_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppBoundTmplRevisionGroupBySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBoundTmplRevisionGroupBySet) ProtoMessage() {}

func (x *AppBoundTmplRevisionGroupBySet) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBoundTmplRevisionGroupBySet.ProtoReflect.Descriptor instead.
func (*AppBoundTmplRevisionGroupBySet) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{5}
}

func (x *AppBoundTmplRevisionGroupBySet) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *AppBoundTmplRevisionGroupBySet) GetTemplateSpaceName() string {
	if x != nil {
		return x.TemplateSpaceName
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySet) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *AppBoundTmplRevisionGroupBySet) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySet) GetTemplateRevisions() []*AppBoundTmplRevisionGroupBySetTemplateRevisionDetail {
	if x != nil {
		return x.TemplateRevisions
	}
	return nil
}

// ReleasedAppBoundTmplRevisionGroupBySet is released app bound template revision group by template set
type ReleasedAppBoundTmplRevisionGroupBySet struct {
	state             protoimpl.MessageState                                          `protogen:"open.v1"`
	TemplateSpaceId   uint32                                                          `protobuf:"varint,1,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateSpaceName string                                                          `protobuf:"bytes,2,opt,name=template_space_name,json=templateSpaceName,proto3" json:"template_space_name,omitempty"`
	TemplateSetId     uint32                                                          `protobuf:"varint,3,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName   string                                                          `protobuf:"bytes,4,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateRevisions []*ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail `protobuf:"bytes,5,rep,name=template_revisions,json=templateRevisions,proto3" json:"template_revisions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) Reset() {
	*x = ReleasedAppBoundTmplRevisionGroupBySet{}
	mi := &file_app_template_binding_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasedAppBoundTmplRevisionGroupBySet) ProtoMessage() {}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasedAppBoundTmplRevisionGroupBySet.ProtoReflect.Descriptor instead.
func (*ReleasedAppBoundTmplRevisionGroupBySet) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{6}
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) GetTemplateSpaceName() string {
	if x != nil {
		return x.TemplateSpaceName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySet) GetTemplateRevisions() []*ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail {
	if x != nil {
		return x.TemplateRevisions
	}
	return nil
}

// AppBoundTmplRevision is app bound template revision
type AppBoundTmplRevision struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TemplateSpaceId      uint32                 `protobuf:"varint,1,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateSpaceName    string                 `protobuf:"bytes,2,opt,name=template_space_name,json=templateSpaceName,proto3" json:"template_space_name,omitempty"`
	TemplateSetId        uint32                 `protobuf:"varint,3,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName      string                 `protobuf:"bytes,4,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateId           uint32                 `protobuf:"varint,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string                 `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	TemplateRevisionId   uint32                 `protobuf:"varint,8,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest             bool                   `protobuf:"varint,9,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	TemplateRevisionName string                 `protobuf:"bytes,10,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string                 `protobuf:"bytes,11,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	FileType             string                 `protobuf:"bytes,12,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode             string                 `protobuf:"bytes,13,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	User                 string                 `protobuf:"bytes,14,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup            string                 `protobuf:"bytes,15,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege            string                 `protobuf:"bytes,16,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Signature            string                 `protobuf:"bytes,17,opt,name=signature,proto3" json:"signature,omitempty"`
	ByteSize             uint64                 `protobuf:"varint,18,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	Creator              string                 `protobuf:"bytes,19,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateAt             string                 `protobuf:"bytes,20,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	FileState            string                 `protobuf:"bytes,21,opt,name=file_state,json=fileState,proto3" json:"file_state,omitempty"`
	Md5                  string                 `protobuf:"bytes,22,opt,name=md5,proto3" json:"md5,omitempty"`
	IsConflict           bool                   `protobuf:"varint,23,opt,name=is_conflict,json=isConflict,proto3" json:"is_conflict,omitempty"`
	Charset              string                 `protobuf:"bytes,24,opt,name=charset,proto3" json:"charset,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AppBoundTmplRevision) Reset() {
	*x = AppBoundTmplRevision{}
	mi := &file_app_template_binding_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppBoundTmplRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBoundTmplRevision) ProtoMessage() {}

func (x *AppBoundTmplRevision) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBoundTmplRevision.ProtoReflect.Descriptor instead.
func (*AppBoundTmplRevision) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{7}
}

func (x *AppBoundTmplRevision) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetTemplateSpaceName() string {
	if x != nil {
		return x.TemplateSpaceName
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppBoundTmplRevision) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *AppBoundTmplRevision) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

func (x *AppBoundTmplRevision) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *AppBoundTmplRevision) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *AppBoundTmplRevision) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AppBoundTmplRevision) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *AppBoundTmplRevision) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *AppBoundTmplRevision) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AppBoundTmplRevision) GetByteSize() uint64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *AppBoundTmplRevision) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AppBoundTmplRevision) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *AppBoundTmplRevision) GetFileState() string {
	if x != nil {
		return x.FileState
	}
	return ""
}

func (x *AppBoundTmplRevision) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AppBoundTmplRevision) GetIsConflict() bool {
	if x != nil {
		return x.IsConflict
	}
	return false
}

func (x *AppBoundTmplRevision) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

// ReleasedAppBoundTmplRevision is released app bound template revision
type ReleasedAppBoundTmplRevision struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TemplateSpaceId      uint32                 `protobuf:"varint,1,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateSpaceName    string                 `protobuf:"bytes,2,opt,name=template_space_name,json=templateSpaceName,proto3" json:"template_space_name,omitempty"`
	TemplateSetId        uint32                 `protobuf:"varint,3,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName      string                 `protobuf:"bytes,4,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateId           uint32                 `protobuf:"varint,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string                 `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	TemplateRevisionId   uint32                 `protobuf:"varint,8,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest             bool                   `protobuf:"varint,9,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	TemplateRevisionName string                 `protobuf:"bytes,10,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string                 `protobuf:"bytes,11,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	FileType             string                 `protobuf:"bytes,12,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode             string                 `protobuf:"bytes,13,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	User                 string                 `protobuf:"bytes,14,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup            string                 `protobuf:"bytes,15,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege            string                 `protobuf:"bytes,16,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Signature            string                 `protobuf:"bytes,17,opt,name=signature,proto3" json:"signature,omitempty"`
	ByteSize             uint64                 `protobuf:"varint,18,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	OriginSignature      string                 `protobuf:"bytes,19,opt,name=origin_signature,json=originSignature,proto3" json:"origin_signature,omitempty"`
	OriginByteSize       uint64                 `protobuf:"varint,20,opt,name=origin_byte_size,json=originByteSize,proto3" json:"origin_byte_size,omitempty"`
	Creator              string                 `protobuf:"bytes,21,opt,name=creator,proto3" json:"creator,omitempty"`
	Reviser              string                 `protobuf:"bytes,22,opt,name=reviser,proto3" json:"reviser,omitempty"`
	CreateAt             string                 `protobuf:"bytes,23,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             string                 `protobuf:"bytes,24,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Md5                  string                 `protobuf:"bytes,25,opt,name=md5,proto3" json:"md5,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReleasedAppBoundTmplRevision) Reset() {
	*x = ReleasedAppBoundTmplRevision{}
	mi := &file_app_template_binding_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasedAppBoundTmplRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasedAppBoundTmplRevision) ProtoMessage() {}

func (x *ReleasedAppBoundTmplRevision) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasedAppBoundTmplRevision.ProtoReflect.Descriptor instead.
func (*ReleasedAppBoundTmplRevision) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{8}
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSpaceName() string {
	if x != nil {
		return x.TemplateSpaceName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetByteSize() uint64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetOriginSignature() string {
	if x != nil {
		return x.OriginSignature
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetOriginByteSize() uint64 {
	if x != nil {
		return x.OriginByteSize
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetReviser() string {
	if x != nil {
		return x.Reviser
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

// Conflict is the conflict when app binds templates
type Conflict struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TemplateSetId   uint32                 `protobuf:"varint,1,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName string                 `protobuf:"bytes,2,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateId      uint32                 `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateName    string                 `protobuf:"bytes,4,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Conflict) Reset() {
	*x = Conflict{}
	mi := &file_app_template_binding_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conflict) ProtoMessage() {}

func (x *Conflict) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conflict.ProtoReflect.Descriptor instead.
func (*Conflict) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{9}
}

func (x *Conflict) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *Conflict) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *Conflict) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *Conflict) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type AppBoundTmplRevisionGroupBySetTemplateRevisionDetail struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TemplateId           uint32                 `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	TemplateRevisionId   uint32                 `protobuf:"varint,4,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest             bool                   `protobuf:"varint,5,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	TemplateRevisionName string                 `protobuf:"bytes,6,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string                 `protobuf:"bytes,7,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	FileType             string                 `protobuf:"bytes,8,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode             string                 `protobuf:"bytes,9,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	User                 string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup            string                 `protobuf:"bytes,11,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege            string                 `protobuf:"bytes,12,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Signature            string                 `protobuf:"bytes,13,opt,name=signature,proto3" json:"signature,omitempty"`
	ByteSize             uint64                 `protobuf:"varint,14,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	Creator              string                 `protobuf:"bytes,15,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateAt             string                 `protobuf:"bytes,16,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	FileState            string                 `protobuf:"bytes,17,opt,name=file_state,json=fileState,proto3" json:"file_state,omitempty"`
	Md5                  string                 `protobuf:"bytes,18,opt,name=md5,proto3" json:"md5,omitempty"`
	IsConflict           bool                   `protobuf:"varint,19,opt,name=is_conflict,json=isConflict,proto3" json:"is_conflict,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) Reset() {
	*x = AppBoundTmplRevisionGroupBySetTemplateRevisionDetail{}
	mi := &file_app_template_binding_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) ProtoMessage() {}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBoundTmplRevisionGroupBySetTemplateRevisionDetail.ProtoReflect.Descriptor instead.
func (*AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetByteSize() uint64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetFileState() string {
	if x != nil {
		return x.FileState
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetIsConflict() bool {
	if x != nil {
		return x.IsConflict
	}
	return false
}

type ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TemplateId           uint32                 `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	TemplateRevisionId   uint32                 `protobuf:"varint,4,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest             bool                   `protobuf:"varint,5,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	TemplateRevisionName string                 `protobuf:"bytes,6,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string                 `protobuf:"bytes,7,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	FileType             string                 `protobuf:"bytes,8,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode             string                 `protobuf:"bytes,9,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	User                 string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup            string                 `protobuf:"bytes,11,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege            string                 `protobuf:"bytes,12,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Signature            string                 `protobuf:"bytes,13,opt,name=signature,proto3" json:"signature,omitempty"`
	ByteSize             uint64                 `protobuf:"varint,14,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	OriginSignature      string                 `protobuf:"bytes,15,opt,name=origin_signature,json=originSignature,proto3" json:"origin_signature,omitempty"`
	OriginByteSize       uint64                 `protobuf:"varint,16,opt,name=origin_byte_size,json=originByteSize,proto3" json:"origin_byte_size,omitempty"`
	Creator              string                 `protobuf:"bytes,17,opt,name=creator,proto3" json:"creator,omitempty"`
	Reviser              string                 `protobuf:"bytes,18,opt,name=reviser,proto3" json:"reviser,omitempty"`
	CreateAt             string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             string                 `protobuf:"bytes,20,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Md5                  string                 `protobuf:"bytes,21,opt,name=md5,proto3" json:"md5,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) Reset() {
	*x = ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail{}
	mi := &file_app_template_binding_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) ProtoMessage() {}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail.ProtoReflect.Descriptor instead.
func (*ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetByteSize() uint64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetOriginSignature() string {
	if x != nil {
		return x.OriginSignature
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetOriginByteSize() uint64 {
	if x != nil {
		return x.OriginByteSize
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetReviser() string {
	if x != nil {
		return x.Reviser
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

var File_app_template_binding_proto protoreflect.FileDescriptor

const file_app_template_binding_proto_rawDesc = "" +
	"\n" +
	"\x1aapp_template_binding.proto\x12\x05pbatb\x1a!pkg/protocol/core/base/base.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xf1\x01\n" +
	"\x12AppTemplateBinding\x125\n" +
	"\x02id\x18\x01 \x01(\rB%\x92A\"2 服务绑定模板套餐后的IDR\x02id\x121\n" +
	"\x04spec\x18\x02 \x01(\v2\x1d.pbatb.AppTemplateBindingSpecR\x04spec\x12C\n" +
	"\n" +
	"attachment\x18\x03 \x01(\v2#.pbatb.AppTemplateBindingAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\x04 \x01(\v2\x10.pbbase.RevisionR\brevision\"\xc1\x03\n" +
	"\x16AppTemplateBindingSpec\x12A\n" +
	"\x12template_space_ids\x18\x01 \x03(\rB\x13\x92A\x102\x0e模板空间IDR\x10templateSpaceIds\x12=\n" +
	"\x10template_set_ids\x18\x02 \x03(\rB\x13\x92A\x102\x0e模板套餐IDR\x0etemplateSetIds\x126\n" +
	"\ftemplate_ids\x18\x03 \x03(\rB\x13\x92A\x102\x0e模板文件IDR\vtemplateIds\x12M\n" +
	"\x15template_revision_ids\x18\x04 \x03(\rB\x19\x92A\x162\x14模板文件版本IDR\x13templateRevisionIds\x12j\n" +
	"\x13latest_template_ids\x18\x05 \x03(\rB:\x92A725最新模板ID：模板文件版本是最新的版本R\x11latestTemplateIds\x122\n" +
	"\bbindings\x18\x06 \x03(\v2\x16.pbatb.TemplateBindingR\bbindings\"\x9d\x01\n" +
	"\x0fTemplateBinding\x12;\n" +
	"\x0ftemplate_set_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板套餐IDR\rtemplateSetId\x12M\n" +
	"\x12template_revisions\x18\x02 \x03(\v2\x1e.pbatb.TemplateRevisionBindingR\x11templateRevisions\"\x93\x02\n" +
	"\x17TemplateRevisionBinding\x124\n" +
	"\vtemplate_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x12K\n" +
	"\x14template_revision_id\x18\x02 \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x12templateRevisionId\x12u\n" +
	"\tis_latest\x18\x03 \x01(\bBX\x92AU2S是否是最新：模板文件版本ID在该模板文件中是最新的一个版本R\bisLatest\"j\n" +
	"\x1cAppTemplateBindingAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\x12$\n" +
	"\x06app_id\x18\x02 \x01(\rB\r\x92A\n" +
	"2\b服务IDR\x05appId\"\xef\v\n" +
	"\x1eAppBoundTmplRevisionGroupBySet\x12?\n" +
	"\x11template_space_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板空间IDR\x0ftemplateSpaceId\x12D\n" +
	"\x13template_space_name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板空间名R\x11templateSpaceName\x12;\n" +
	"\x0ftemplate_set_id\x18\x03 \x01(\rB\x13\x92A\x102\x0e模板套餐IDR\rtemplateSetId\x12@\n" +
	"\x11template_set_name\x18\x04 \x01(\tB\x14\x92A\x112\x0f模板套餐名R\x0ftemplateSetName\x12m\n" +
	"\x12template_revisions\x18\x05 \x03(\v2>.pbatb.AppBoundTmplRevisionGroupBySet.template_revision_detailR\x11templateRevisions\x1a\xd7\b\n" +
	"\x18template_revision_detail\x124\n" +
	"\vtemplate_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x12(\n" +
	"\x04name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板文件名R\x04name\x12+\n" +
	"\x04path\x18\x03 \x01(\tB\x17\x92A\x142\x12模板文件路径R\x04path\x12K\n" +
	"\x14template_revision_id\x18\x04 \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x12templateRevisionId\x12L\n" +
	"\tis_latest\x18\x05 \x01(\bB/\x92A,2*是否是最新版本：是=true,否=falseR\bisLatest\x12P\n" +
	"\x16template_revision_name\x18\x06 \x01(\tB\x1a\x92A\x172\x15模板文件版本名R\x14templateRevisionName\x12S\n" +
	"\x16template_revision_memo\x18\a \x01(\tB\x1d\x92A\x1a2\x18模板文件版本描述R\x14templateRevisionMemo\x12`\n" +
	"\tfile_type\x18\b \x01(\tBC\x92A@2>配置文件格式：文本文件=file, 二进制文件=binaryR\bfileType\x124\n" +
	"\tfile_mode\x18\t \x01(\tB\x17\x92A\x142\f文件模式:\x04unixR\bfileMode\x12(\n" +
	"\x04user\x18\n" +
	" \x01(\tB\x14\x92A\x112\x0f用户权限名R\x04user\x126\n" +
	"\n" +
	"user_group\x18\v \x01(\tB\x17\x92A\x142\x12用户组权限名R\tuserGroup\x12/\n" +
	"\tprivilege\x18\f \x01(\tB\x11\x92A\x0e2\f文件权限R\tprivilege\x12/\n" +
	"\tsignature\x18\r \x01(\tB\x11\x92A\x0e2\f文件sha256R\tsignature\x12.\n" +
	"\tbyte_size\x18\x0e \x01(\x04B\x11\x92A\x0e2\f文件大小R\bbyteSize\x12(\n" +
	"\acreator\x18\x0f \x01(\tB\x0e\x92A\v2\t创建人R\acreator\x12.\n" +
	"\tcreate_at\x18\x10 \x01(\tB\x11\x92A\x0e2\f创建时间R\bcreateAt\x120\n" +
	"\n" +
	"file_state\x18\x11 \x01(\tB\x11\x92A\x0e2\f文件状态R\tfileState\x12 \n" +
	"\x03md5\x18\x12 \x01(\tB\x0e\x92A\v2\t文件MD5R\x03md5\x122\n" +
	"\vis_conflict\x18\x13 \x01(\bB\x11\x92A\x0e2\f是否冲突R\n" +
	"isConflict\"\xf4\f\n" +
	"&ReleasedAppBoundTmplRevisionGroupBySet\x12?\n" +
	"\x11template_space_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板空间IDR\x0ftemplateSpaceId\x12D\n" +
	"\x13template_space_name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板空间名R\x11templateSpaceName\x12;\n" +
	"\x0ftemplate_set_id\x18\x03 \x01(\rB\x13\x92A\x102\x0e模板套餐IDR\rtemplateSetId\x12@\n" +
	"\x11template_set_name\x18\x04 \x01(\tB\x14\x92A\x112\x0f模板套餐名R\x0ftemplateSetName\x12u\n" +
	"\x12template_revisions\x18\x05 \x03(\v2F.pbatb.ReleasedAppBoundTmplRevisionGroupBySet.template_revision_detailR\x11templateRevisions\x1a\xcc\t\n" +
	"\x18template_revision_detail\x124\n" +
	"\vtemplate_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x12(\n" +
	"\x04name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板文件名R\x04name\x12+\n" +
	"\x04path\x18\x03 \x01(\tB\x17\x92A\x142\x12模板文件路径R\x04path\x12K\n" +
	"\x14template_revision_id\x18\x04 \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x12templateRevisionId\x12L\n" +
	"\tis_latest\x18\x05 \x01(\bB/\x92A,2*是否是最新版本：是=true,否=falseR\bisLatest\x12P\n" +
	"\x16template_revision_name\x18\x06 \x01(\tB\x1a\x92A\x172\x15模板文件版本名R\x14templateRevisionName\x12S\n" +
	"\x16template_revision_memo\x18\a \x01(\tB\x1d\x92A\x1a2\x18模板文件版本描述R\x14templateRevisionMemo\x12`\n" +
	"\tfile_type\x18\b \x01(\tBC\x92A@2>配置文件格式：文本文件=file, 二进制文件=binaryR\bfileType\x124\n" +
	"\tfile_mode\x18\t \x01(\tB\x17\x92A\x142\f文件模式:\x04unixR\bfileMode\x12(\n" +
	"\x04user\x18\n" +
	" \x01(\tB\x14\x92A\x112\x0f用户权限名R\x04user\x126\n" +
	"\n" +
	"user_group\x18\v \x01(\tB\x17\x92A\x142\x12用户组权限名R\tuserGroup\x12/\n" +
	"\tprivilege\x18\f \x01(\tB\x11\x92A\x0e2\f文件权限R\tprivilege\x12/\n" +
	"\tsignature\x18\r \x01(\tB\x11\x92A\x0e2\f文件sha256R\tsignature\x12.\n" +
	"\tbyte_size\x18\x0e \x01(\x04B\x11\x92A\x0e2\f文件大小R\bbyteSize\x12?\n" +
	"\x10origin_signature\x18\x0f \x01(\tB\x14\x92A\x112\x0f源文件sha256R\x0foriginSignature\x12>\n" +
	"\x10origin_byte_size\x18\x10 \x01(\x04B\x14\x92A\x112\x0f源文件大小R\x0eoriginByteSize\x12(\n" +
	"\acreator\x18\x11 \x01(\tB\x0e\x92A\v2\t创建人R\acreator\x12(\n" +
	"\areviser\x18\x12 \x01(\tB\x0e\x92A\v2\t更新人R\areviser\x12.\n" +
	"\tcreate_at\x18\x13 \x01(\tB\x11\x92A\x0e2\f创建时间R\bcreateAt\x12.\n" +
	"\tupdate_at\x18\x14 \x01(\tB\x11\x92A\x0e2\f更新时间R\bupdateAt\x12 \n" +
	"\x03md5\x18\x15 \x01(\tB\x0e\x92A\v2\t文件md5R\x03md5\"\xab\v\n" +
	"\x14AppBoundTmplRevision\x12?\n" +
	"\x11template_space_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板空间IDR\x0ftemplateSpaceId\x12D\n" +
	"\x13template_space_name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板空间名R\x11templateSpaceName\x12;\n" +
	"\x0ftemplate_set_id\x18\x03 \x01(\rB\x13\x92A\x102\x0e模板套餐IDR\rtemplateSetId\x12@\n" +
	"\x11template_set_name\x18\x04 \x01(\tB\x14\x92A\x112\x0f模板套餐名R\x0ftemplateSetName\x124\n" +
	"\vtemplate_id\x18\x05 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x12(\n" +
	"\x04name\x18\x06 \x01(\tB\x14\x92A\x112\x0f模板文件名R\x04name\x12+\n" +
	"\x04path\x18\a \x01(\tB\x17\x92A\x142\x12模板文件路径R\x04path\x12K\n" +
	"\x14template_revision_id\x18\b \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x12templateRevisionId\x12L\n" +
	"\tis_latest\x18\t \x01(\bB/\x92A,2*是否是最新版本：是=true,否=falseR\bisLatest\x12P\n" +
	"\x16template_revision_name\x18\n" +
	" \x01(\tB\x1a\x92A\x172\x15模板文件版本名R\x14templateRevisionName\x12S\n" +
	"\x16template_revision_memo\x18\v \x01(\tB\x1d\x92A\x1a2\x18模板文件版本描述R\x14templateRevisionMemo\x12`\n" +
	"\tfile_type\x18\f \x01(\tBC\x92A@2>配置文件格式：文本文件=file, 二进制文件=binaryR\bfileType\x124\n" +
	"\tfile_mode\x18\r \x01(\tB\x17\x92A\x142\f文件模式:\x04unixR\bfileMode\x12(\n" +
	"\x04user\x18\x0e \x01(\tB\x14\x92A\x112\x0f用户权限名R\x04user\x126\n" +
	"\n" +
	"user_group\x18\x0f \x01(\tB\x17\x92A\x142\x12用户组权限名R\tuserGroup\x12/\n" +
	"\tprivilege\x18\x10 \x01(\tB\x11\x92A\x0e2\f文件权限R\tprivilege\x12/\n" +
	"\tsignature\x18\x11 \x01(\tB\x11\x92A\x0e2\f文件sha256R\tsignature\x12.\n" +
	"\tbyte_size\x18\x12 \x01(\x04B\x11\x92A\x0e2\f文件大小R\bbyteSize\x12(\n" +
	"\acreator\x18\x13 \x01(\tB\x0e\x92A\v2\t创建人R\acreator\x12.\n" +
	"\tcreate_at\x18\x14 \x01(\tB\x11\x92A\x0e2\f创建时间R\bcreateAt\x12U\n" +
	"\n" +
	"file_state\x18\x15 \x01(\tB6\x92A321文件状态：(ADD、DELETE、REVISE、UNCHANGE)R\tfileState\x12 \n" +
	"\x03md5\x18\x16 \x01(\tB\x0e\x92A\v2\t文件md5R\x03md5\x122\n" +
	"\vis_conflict\x18\x17 \x01(\bB\x11\x92A\x0e2\f是否冲突R\n" +
	"isConflict\x12+\n" +
	"\acharset\x18\x18 \x01(\tB\x11\x92A\x0e2\f文件编码R\acharset\"\xd6\v\n" +
	"\x1cReleasedAppBoundTmplRevision\x12?\n" +
	"\x11template_space_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板空间IDR\x0ftemplateSpaceId\x12D\n" +
	"\x13template_space_name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板空间名R\x11templateSpaceName\x12;\n" +
	"\x0ftemplate_set_id\x18\x03 \x01(\rB\x13\x92A\x102\x0e模板套餐IDR\rtemplateSetId\x12@\n" +
	"\x11template_set_name\x18\x04 \x01(\tB\x14\x92A\x112\x0f模板套餐名R\x0ftemplateSetName\x124\n" +
	"\vtemplate_id\x18\x05 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x12(\n" +
	"\x04name\x18\x06 \x01(\tB\x14\x92A\x112\x0f模板文件名R\x04name\x12+\n" +
	"\x04path\x18\a \x01(\tB\x17\x92A\x142\x12模板文件路径R\x04path\x12K\n" +
	"\x14template_revision_id\x18\b \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x12templateRevisionId\x12L\n" +
	"\tis_latest\x18\t \x01(\bB/\x92A,2*是否是最新版本：是=true,否=falseR\bisLatest\x12P\n" +
	"\x16template_revision_name\x18\n" +
	" \x01(\tB\x1a\x92A\x172\x15模板文件版本名R\x14templateRevisionName\x12S\n" +
	"\x16template_revision_memo\x18\v \x01(\tB\x1d\x92A\x1a2\x18模板文件版本描述R\x14templateRevisionMemo\x12`\n" +
	"\tfile_type\x18\f \x01(\tBC\x92A@2>配置文件格式：文本文件=file, 二进制文件=binaryR\bfileType\x124\n" +
	"\tfile_mode\x18\r \x01(\tB\x17\x92A\x142\f文件模式:\x04unixR\bfileMode\x12(\n" +
	"\x04user\x18\x0e \x01(\tB\x14\x92A\x112\x0f用户权限名R\x04user\x126\n" +
	"\n" +
	"user_group\x18\x0f \x01(\tB\x17\x92A\x142\x12用户组权限名R\tuserGroup\x12/\n" +
	"\tprivilege\x18\x10 \x01(\tB\x11\x92A\x0e2\f文件权限R\tprivilege\x12/\n" +
	"\tsignature\x18\x11 \x01(\tB\x11\x92A\x0e2\f文件sha256R\tsignature\x12.\n" +
	"\tbyte_size\x18\x12 \x01(\x04B\x11\x92A\x0e2\f文件大小R\bbyteSize\x12?\n" +
	"\x10origin_signature\x18\x13 \x01(\tB\x14\x92A\x112\x0f源文件sha256R\x0foriginSignature\x12>\n" +
	"\x10origin_byte_size\x18\x14 \x01(\x04B\x14\x92A\x112\x0f源文件大小R\x0eoriginByteSize\x12(\n" +
	"\acreator\x18\x15 \x01(\tB\x0e\x92A\v2\t创建人R\acreator\x12(\n" +
	"\areviser\x18\x16 \x01(\tB\x0e\x92A\v2\t更新人R\areviser\x12.\n" +
	"\tcreate_at\x18\x17 \x01(\tB\x11\x92A\x0e2\f更新时间R\bcreateAt\x12.\n" +
	"\tupdate_at\x18\x18 \x01(\tB\x11\x92A\x0e2\f更新时间R\bupdateAt\x12 \n" +
	"\x03md5\x18\x19 \x01(\tB\x0e\x92A\v2\t文件md5R\x03md5\"\xfa\x01\n" +
	"\bConflict\x12;\n" +
	"\x0ftemplate_set_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板套餐IDR\rtemplateSetId\x12@\n" +
	"\x11template_set_name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板套餐名R\x0ftemplateSetName\x124\n" +
	"\vtemplate_id\x18\x03 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x129\n" +
	"\rtemplate_name\x18\x04 \x01(\tB\x14\x92A\x112\x0f模板文件名R\ftemplateNameBQZOgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/app-template-binding;pbatbb\x06proto3"

var (
	file_app_template_binding_proto_rawDescOnce sync.Once
	file_app_template_binding_proto_rawDescData []byte
)

func file_app_template_binding_proto_rawDescGZIP() []byte {
	file_app_template_binding_proto_rawDescOnce.Do(func() {
		file_app_template_binding_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_template_binding_proto_rawDesc), len(file_app_template_binding_proto_rawDesc)))
	})
	return file_app_template_binding_proto_rawDescData
}

var file_app_template_binding_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_app_template_binding_proto_goTypes = []any{
	(*AppTemplateBinding)(nil),                                           // 0: pbatb.AppTemplateBinding
	(*AppTemplateBindingSpec)(nil),                                       // 1: pbatb.AppTemplateBindingSpec
	(*TemplateBinding)(nil),                                              // 2: pbatb.TemplateBinding
	(*TemplateRevisionBinding)(nil),                                      // 3: pbatb.TemplateRevisionBinding
	(*AppTemplateBindingAttachment)(nil),                                 // 4: pbatb.AppTemplateBindingAttachment
	(*AppBoundTmplRevisionGroupBySet)(nil),                               // 5: pbatb.AppBoundTmplRevisionGroupBySet
	(*ReleasedAppBoundTmplRevisionGroupBySet)(nil),                       // 6: pbatb.ReleasedAppBoundTmplRevisionGroupBySet
	(*AppBoundTmplRevision)(nil),                                         // 7: pbatb.AppBoundTmplRevision
	(*ReleasedAppBoundTmplRevision)(nil),                                 // 8: pbatb.ReleasedAppBoundTmplRevision
	(*Conflict)(nil),                                                     // 9: pbatb.Conflict
	(*AppBoundTmplRevisionGroupBySetTemplateRevisionDetail)(nil),         // 10: pbatb.AppBoundTmplRevisionGroupBySet.template_revision_detail
	(*ReleasedAppBoundTmplRevisionGroupBySetTemplateRevisionDetail)(nil), // 11: pbatb.ReleasedAppBoundTmplRevisionGroupBySet.template_revision_detail
	(*base.Revision)(nil),                                                // 12: pbbase.Revision
}
var file_app_template_binding_proto_depIdxs = []int32{
	1,  // 0: pbatb.AppTemplateBinding.spec:type_name -> pbatb.AppTemplateBindingSpec
	4,  // 1: pbatb.AppTemplateBinding.attachment:type_name -> pbatb.AppTemplateBindingAttachment
	12, // 2: pbatb.AppTemplateBinding.revision:type_name -> pbbase.Revision
	2,  // 3: pbatb.AppTemplateBindingSpec.bindings:type_name -> pbatb.TemplateBinding
	3,  // 4: pbatb.TemplateBinding.template_revisions:type_name -> pbatb.TemplateRevisionBinding
	10, // 5: pbatb.AppBoundTmplRevisionGroupBySet.template_revisions:type_name -> pbatb.AppBoundTmplRevisionGroupBySet.template_revision_detail
	11, // 6: pbatb.ReleasedAppBoundTmplRevisionGroupBySet.template_revisions:type_name -> pbatb.ReleasedAppBoundTmplRevisionGroupBySet.template_revision_detail
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_app_template_binding_proto_init() }
func file_app_template_binding_proto_init() {
	if File_app_template_binding_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_template_binding_proto_rawDesc), len(file_app_template_binding_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_template_binding_proto_goTypes,
		DependencyIndexes: file_app_template_binding_proto_depIdxs,
		MessageInfos:      file_app_template_binding_proto_msgTypes,
	}.Build()
	File_app_template_binding_proto = out.File
	file_app_template_binding_proto_goTypes = nil
	file_app_template_binding_proto_depIdxs = nil
}
