syntax = "proto3";

package pbhr;

import "pkg/protocol/core/base/base.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/hook-revision;pbhr";

// HookRevision source resource reference: pkg/dal/table/hook_revision.go
message HookRevision {
  uint32 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "脚本版本ID" }];
  HookRevisionSpec spec = 2;
  HookRevisionAttachment attachment = 3;
  pbbase.Revision revision = 4;
}

// HookRevisionAttachment source resource reference: pkg/dal/table/hook_revision.go
message HookRevisionSpec {
  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "脚本版本号" }];
  string content = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "脚本版本内容" }];
  string state = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "脚本版本状态：(not_deployed、deployed、shutdown)"
  }];
  string memo = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "脚本版本描述" }];
}

// HookRevisionAttachment source resource reference: pkg/dal/table/hook_revision.go
message HookRevisionAttachment {
  uint32 biz_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "业务ID" }];
  uint32 hook_id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "脚本ID" }];
}