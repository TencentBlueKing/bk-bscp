// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: hook_revision.proto

package pbhr

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HookRevision source resource reference: pkg/dal/table/hook_revision.go
type HookRevision struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            uint32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *HookRevisionSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment    *HookRevisionAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.Revision          `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HookRevision) Reset() {
	*x = HookRevision{}
	mi := &file_hook_revision_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HookRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookRevision) ProtoMessage() {}

func (x *HookRevision) ProtoReflect() protoreflect.Message {
	mi := &file_hook_revision_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookRevision.ProtoReflect.Descriptor instead.
func (*HookRevision) Descriptor() ([]byte, []int) {
	return file_hook_revision_proto_rawDescGZIP(), []int{0}
}

func (x *HookRevision) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HookRevision) GetSpec() *HookRevisionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *HookRevision) GetAttachment() *HookRevisionAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *HookRevision) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// HookRevisionAttachment source resource reference: pkg/dal/table/hook_revision.go
type HookRevisionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Memo          string                 `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HookRevisionSpec) Reset() {
	*x = HookRevisionSpec{}
	mi := &file_hook_revision_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HookRevisionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookRevisionSpec) ProtoMessage() {}

func (x *HookRevisionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_hook_revision_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookRevisionSpec.ProtoReflect.Descriptor instead.
func (*HookRevisionSpec) Descriptor() ([]byte, []int) {
	return file_hook_revision_proto_rawDescGZIP(), []int{1}
}

func (x *HookRevisionSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HookRevisionSpec) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HookRevisionSpec) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *HookRevisionSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

// HookRevisionAttachment source resource reference: pkg/dal/table/hook_revision.go
type HookRevisionAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId        uint32                 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HookRevisionAttachment) Reset() {
	*x = HookRevisionAttachment{}
	mi := &file_hook_revision_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HookRevisionAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookRevisionAttachment) ProtoMessage() {}

func (x *HookRevisionAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_hook_revision_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookRevisionAttachment.ProtoReflect.Descriptor instead.
func (*HookRevisionAttachment) Descriptor() ([]byte, []int) {
	return file_hook_revision_proto_rawDescGZIP(), []int{2}
}

func (x *HookRevisionAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *HookRevisionAttachment) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

var File_hook_revision_proto protoreflect.FileDescriptor

const file_hook_revision_proto_rawDesc = "" +
	"\n" +
	"\x13hook_revision.proto\x12\x04pbhr\x1a!pkg/protocol/core/base/base.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xcb\x01\n" +
	"\fHookRevision\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x13\x92A\x102\x0e脚本版本IDR\x02id\x12*\n" +
	"\x04spec\x18\x02 \x01(\v2\x16.pbhr.HookRevisionSpecR\x04spec\x12<\n" +
	"\n" +
	"attachment\x18\x03 \x01(\v2\x1c.pbhr.HookRevisionAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\x04 \x01(\v2\x10.pbbase.RevisionR\brevision\"\xf2\x01\n" +
	"\x10HookRevisionSpec\x12(\n" +
	"\x04name\x18\x01 \x01(\tB\x14\x92A\x112\x0f脚本版本号R\x04name\x121\n" +
	"\acontent\x18\x02 \x01(\tB\x17\x92A\x142\x12脚本版本内容R\acontent\x12T\n" +
	"\x05state\x18\x03 \x01(\tB>\x92A;29脚本版本状态：(not_deployed、deployed、shutdown)R\x05state\x12+\n" +
	"\x04memo\x18\x04 \x01(\tB\x17\x92A\x142\x12脚本版本描述R\x04memo\"f\n" +
	"\x16HookRevisionAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\x12&\n" +
	"\ahook_id\x18\x02 \x01(\rB\r\x92A\n" +
	"2\b脚本IDR\x06hookIdBIZGgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/hook-revision;pbhrb\x06proto3"

var (
	file_hook_revision_proto_rawDescOnce sync.Once
	file_hook_revision_proto_rawDescData []byte
)

func file_hook_revision_proto_rawDescGZIP() []byte {
	file_hook_revision_proto_rawDescOnce.Do(func() {
		file_hook_revision_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hook_revision_proto_rawDesc), len(file_hook_revision_proto_rawDesc)))
	})
	return file_hook_revision_proto_rawDescData
}

var file_hook_revision_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_hook_revision_proto_goTypes = []any{
	(*HookRevision)(nil),           // 0: pbhr.HookRevision
	(*HookRevisionSpec)(nil),       // 1: pbhr.HookRevisionSpec
	(*HookRevisionAttachment)(nil), // 2: pbhr.HookRevisionAttachment
	(*base.Revision)(nil),          // 3: pbbase.Revision
}
var file_hook_revision_proto_depIdxs = []int32{
	1, // 0: pbhr.HookRevision.spec:type_name -> pbhr.HookRevisionSpec
	2, // 1: pbhr.HookRevision.attachment:type_name -> pbhr.HookRevisionAttachment
	3, // 2: pbhr.HookRevision.revision:type_name -> pbbase.Revision
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_hook_revision_proto_init() }
func file_hook_revision_proto_init() {
	if File_hook_revision_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hook_revision_proto_rawDesc), len(file_hook_revision_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hook_revision_proto_goTypes,
		DependencyIndexes: file_hook_revision_proto_depIdxs,
		MessageInfos:      file_hook_revision_proto_msgTypes,
	}.Build()
	File_hook_revision_proto = out.File
	file_hook_revision_proto_goTypes = nil
	file_hook_revision_proto_depIdxs = nil
}
