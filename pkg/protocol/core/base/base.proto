syntax = "proto3";

import "protoc-gen-openapiv2/options/annotations.proto";

package pbbase;

option go_package = "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base;pbbase";

// Revision source resource reference: pkg/dal/table/table.go
message Revision {
  string creator = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "创建人" }];
  string reviser = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "更新人" }];
  string create_at = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "创建时间" }];
  string update_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "更新时间" }];
}

// CreatedRevision source resource reference: pkg/dal/table/table.go
message CreatedRevision {
  string creator = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "创建人" }];
  string create_at = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "创建时间" }];
}

// BasePage source resource reference: pkg/types/page.go
message BasePage {
  bool count = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "总数" }];
  uint32 start = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "页码" }];
  uint32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "创建人" }];
  string sort = 4;
  // direction is enum type.
  string order = 5;
}

message EmptyReq {}

message EmptyResp {}

message BaseResp {
  int32 code = 1;
  string message = 2;
}

// Versioning defines the version control related info.
message Versioning {
  // Major version when you make incompatible API changes.
  uint32 Major = 1;
  // Minor version when you add functionality in a backwards compatible manner.
  uint32 Minor = 2;
  // Patch version when you make backwards compatible bug fixes.
  uint32 Patch = 3;
}

// 参数错误
message InvalidArgument {
  string field = 1;
  string message = 2;
}

message ErrDetails {
  uint32 PrimaryError = 1;
  uint32 SecondaryError = 2;
}