// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.1
// source: process_instance.proto

package pbpi

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProcInst source resource reference: pkg/dal/table/process_instance.go
type ProcInst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec       *ProcInstSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment *ProcInstAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision   *base.Revision      `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *ProcInst) Reset() {
	*x = ProcInst{}
	mi := &file_process_instance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcInst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInst) ProtoMessage() {}

func (x *ProcInst) ProtoReflect() protoreflect.Message {
	mi := &file_process_instance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInst.ProtoReflect.Descriptor instead.
func (*ProcInst) Descriptor() ([]byte, []int) {
	return file_process_instance_proto_rawDescGZIP(), []int{0}
}

func (x *ProcInst) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcInst) GetSpec() *ProcInstSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ProcInst) GetAttachment() *ProcInstAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *ProcInst) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// ProcessSpec source resource reference: pkg/dal/table/process_instance.go
type ProcInstSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalInstId     string                 `protobuf:"bytes,1,opt,name=local_inst_id,json=localInstId,proto3" json:"local_inst_id,omitempty"`
	InstId          string                 `protobuf:"bytes,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	Status          string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ManagedStatus   string                 `protobuf:"bytes,4,opt,name=managed_status,json=managedStatus,proto3" json:"managed_status,omitempty"`
	StatusUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=status_updated_at,json=statusUpdatedAt,proto3" json:"status_updated_at,omitempty"`
}

func (x *ProcInstSpec) Reset() {
	*x = ProcInstSpec{}
	mi := &file_process_instance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcInstSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInstSpec) ProtoMessage() {}

func (x *ProcInstSpec) ProtoReflect() protoreflect.Message {
	mi := &file_process_instance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInstSpec.ProtoReflect.Descriptor instead.
func (*ProcInstSpec) Descriptor() ([]byte, []int) {
	return file_process_instance_proto_rawDescGZIP(), []int{1}
}

func (x *ProcInstSpec) GetLocalInstId() string {
	if x != nil {
		return x.LocalInstId
	}
	return ""
}

func (x *ProcInstSpec) GetInstId() string {
	if x != nil {
		return x.InstId
	}
	return ""
}

func (x *ProcInstSpec) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcInstSpec) GetManagedStatus() string {
	if x != nil {
		return x.ManagedStatus
	}
	return ""
}

func (x *ProcInstSpec) GetStatusUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusUpdatedAt
	}
	return nil
}

type ProcInstAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	TenantId  string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ProcessId uint32 `protobuf:"varint,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
}

func (x *ProcInstAttachment) Reset() {
	*x = ProcInstAttachment{}
	mi := &file_process_instance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcInstAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInstAttachment) ProtoMessage() {}

func (x *ProcInstAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_process_instance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInstAttachment.ProtoReflect.Descriptor instead.
func (*ProcInstAttachment) Descriptor() ([]byte, []int) {
	return file_process_instance_proto_rawDescGZIP(), []int{2}
}

func (x *ProcInstAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ProcInstAttachment) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ProcInstAttachment) GetProcessId() uint32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

var File_process_instance_proto protoreflect.FileDescriptor

var file_process_instance_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x70, 0x69, 0x1a, 0x21,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x13, 0x92, 0x41, 0x10,
	0x32, 0x0e, 0xe8, 0xbf, 0x9b, 0xe7, 0xa8, 0x8b, 0xe5, 0xae, 0x9e, 0xe4, 0xbe, 0x8b, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e,
	0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x38, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41,
	0x0d, 0x32, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x44, 0x52, 0x0b,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x69,
	0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41,
	0x08, 0x32, 0x06, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x44, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x21, 0x92, 0x41, 0x1e, 0x32, 0x1c, 0xe8, 0xbf, 0x9b, 0xe7, 0xa8, 0x8b, 0xe7, 0x8a,
	0xb6, 0xe6, 0x80, 0x81, 0x3a, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2c, 0x73, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x0e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe6, 0x89, 0x98, 0xe7, 0xae,
	0xa1, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x3a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2c,
	0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5f, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xe6, 0x9b, 0xb4, 0xe6,
	0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x50, 0x72,
	0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0x49, 0x44, 0x52,
	0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08,
	0xe7, 0xa7, 0x9f, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe8, 0xbf, 0x9b,
	0xe7, 0xa8, 0x8b, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0x49, 0x44, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65,
	0x4b, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x6b, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b,
	0x70, 0x62, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_process_instance_proto_rawDescOnce sync.Once
	file_process_instance_proto_rawDescData = file_process_instance_proto_rawDesc
)

func file_process_instance_proto_rawDescGZIP() []byte {
	file_process_instance_proto_rawDescOnce.Do(func() {
		file_process_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_process_instance_proto_rawDescData)
	})
	return file_process_instance_proto_rawDescData
}

var file_process_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_process_instance_proto_goTypes = []any{
	(*ProcInst)(nil),              // 0: pbpi.ProcInst
	(*ProcInstSpec)(nil),          // 1: pbpi.ProcInstSpec
	(*ProcInstAttachment)(nil),    // 2: pbpi.ProcInstAttachment
	(*base.Revision)(nil),         // 3: pbbase.Revision
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_process_instance_proto_depIdxs = []int32{
	1, // 0: pbpi.ProcInst.spec:type_name -> pbpi.ProcInstSpec
	2, // 1: pbpi.ProcInst.attachment:type_name -> pbpi.ProcInstAttachment
	3, // 2: pbpi.ProcInst.revision:type_name -> pbbase.Revision
	4, // 3: pbpi.ProcInstSpec.status_updated_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_process_instance_proto_init() }
func file_process_instance_proto_init() {
	if File_process_instance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_process_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_process_instance_proto_goTypes,
		DependencyIndexes: file_process_instance_proto_depIdxs,
		MessageInfos:      file_process_instance_proto_msgTypes,
	}.Build()
	File_process_instance_proto = out.File
	file_process_instance_proto_rawDesc = nil
	file_process_instance_proto_goTypes = nil
	file_process_instance_proto_depIdxs = nil
}
