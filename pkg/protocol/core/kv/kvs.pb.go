// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: kvs.proto

package pbkv

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	content "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/content"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Kv source resource reference: pkg/dal/table/kvs.go
type Kv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KvState                string               `protobuf:"bytes,2,opt,name=kv_state,json=kvState,proto3" json:"kv_state,omitempty"`
	Spec                   *KvSpec              `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment             *KvAttachment        `protobuf:"bytes,4,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision               *base.Revision       `protobuf:"bytes,5,opt,name=revision,proto3" json:"revision,omitempty"`
	ContentSpec            *content.ContentSpec `protobuf:"bytes,6,opt,name=content_spec,json=contentSpec,proto3" json:"content_spec,omitempty"`
	TableConfigPreviewName string               `protobuf:"bytes,7,opt,name=table_config_preview_name,json=tableConfigPreviewName,proto3" json:"table_config_preview_name,omitempty"`
}

func (x *Kv) Reset() {
	*x = Kv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kv) ProtoMessage() {}

func (x *Kv) ProtoReflect() protoreflect.Message {
	mi := &file_kvs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kv.ProtoReflect.Descriptor instead.
func (*Kv) Descriptor() ([]byte, []int) {
	return file_kvs_proto_rawDescGZIP(), []int{0}
}

func (x *Kv) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Kv) GetKvState() string {
	if x != nil {
		return x.KvState
	}
	return ""
}

func (x *Kv) GetSpec() *KvSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Kv) GetAttachment() *KvAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *Kv) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *Kv) GetContentSpec() *content.ContentSpec {
	if x != nil {
		return x.ContentSpec
	}
	return nil
}

func (x *Kv) GetTableConfigPreviewName() string {
	if x != nil {
		return x.TableConfigPreviewName
	}
	return ""
}

// KvSpec source resource reference: pkg/dal/table/kvs.go
type KvSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                       string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	KvType                    string           `protobuf:"bytes,2,opt,name=kv_type,json=kvType,proto3" json:"kv_type,omitempty"`
	Value                     string           `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Memo                      string           `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	SecretType                string           `protobuf:"bytes,5,opt,name=secret_type,json=secretType,proto3" json:"secret_type,omitempty"`
	SecretHidden              bool             `protobuf:"varint,6,opt,name=secret_hidden,json=secretHidden,proto3" json:"secret_hidden,omitempty"`
	CertificateExpirationDate string           `protobuf:"bytes,7,opt,name=certificate_expiration_date,json=certificateExpirationDate,proto3" json:"certificate_expiration_date,omitempty"`
	ManagedTableId            uint32           `protobuf:"varint,10,opt,name=managed_table_id,json=managedTableId,proto3" json:"managed_table_id,omitempty"`
	ExternalSourceId          uint32           `protobuf:"varint,11,opt,name=external_source_id,json=externalSourceId,proto3" json:"external_source_id,omitempty"`
	FilterCondition           *structpb.Struct `protobuf:"bytes,12,opt,name=filter_condition,json=filterCondition,proto3" json:"filter_condition,omitempty"`
	FilterFields              []string         `protobuf:"bytes,13,rep,name=filter_fields,json=filterFields,proto3" json:"filter_fields,omitempty"`
}

func (x *KvSpec) Reset() {
	*x = KvSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvSpec) ProtoMessage() {}

func (x *KvSpec) ProtoReflect() protoreflect.Message {
	mi := &file_kvs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvSpec.ProtoReflect.Descriptor instead.
func (*KvSpec) Descriptor() ([]byte, []int) {
	return file_kvs_proto_rawDescGZIP(), []int{1}
}

func (x *KvSpec) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KvSpec) GetKvType() string {
	if x != nil {
		return x.KvType
	}
	return ""
}

func (x *KvSpec) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *KvSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *KvSpec) GetSecretType() string {
	if x != nil {
		return x.SecretType
	}
	return ""
}

func (x *KvSpec) GetSecretHidden() bool {
	if x != nil {
		return x.SecretHidden
	}
	return false
}

func (x *KvSpec) GetCertificateExpirationDate() string {
	if x != nil {
		return x.CertificateExpirationDate
	}
	return ""
}

func (x *KvSpec) GetManagedTableId() uint32 {
	if x != nil {
		return x.ManagedTableId
	}
	return 0
}

func (x *KvSpec) GetExternalSourceId() uint32 {
	if x != nil {
		return x.ExternalSourceId
	}
	return 0
}

func (x *KvSpec) GetFilterCondition() *structpb.Struct {
	if x != nil {
		return x.FilterCondition
	}
	return nil
}

func (x *KvSpec) GetFilterFields() []string {
	if x != nil {
		return x.FilterFields
	}
	return nil
}

// KvAttachment source resource reference: pkg/dal/table/kvs.go
type KvAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *KvAttachment) Reset() {
	*x = KvAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvAttachment) ProtoMessage() {}

func (x *KvAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_kvs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvAttachment.ProtoReflect.Descriptor instead.
func (*KvAttachment) Descriptor() ([]byte, []int) {
	return file_kvs_proto_rawDescGZIP(), []int{2}
}

func (x *KvAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *KvAttachment) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

var File_kvs_proto protoreflect.FileDescriptor

var file_kvs_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6b, 0x76, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x6b,
	0x76, 0x1a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x03, 0x0a, 0x02,
	0x4b, 0x76, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16,
	0x92, 0x41, 0x13, 0x32, 0x11, 0xe9, 0x94, 0xae, 0xe5, 0x80, 0xbc, 0xe9, 0x85, 0x8d, 0xe7, 0xbd,
	0xae, 0xe9, 0xa1, 0xb9, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5a, 0x0a, 0x08, 0x6b, 0x76,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0x92, 0x41,
	0x3c, 0x32, 0x3a, 0xe9, 0x94, 0xae, 0xe5, 0x80, 0xbc, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe9,
	0xa1, 0xb9, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xef, 0xbc, 0x9a, 0x28, 0x41, 0x44, 0x44, 0xe3,
	0x80, 0x81, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0xe3, 0x80, 0x81, 0x52, 0x45, 0x56, 0x49, 0x53,
	0x45, 0xe3, 0x80, 0x81, 0x55, 0x4e, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x29, 0x52, 0x07, 0x6b,
	0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x6b, 0x76, 0x2e, 0x4b, 0x76, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x6b, 0x76, 0x2e, 0x4b, 0x76, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x58, 0x0a, 0x19, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe8,
	0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe9, 0xa2, 0x84, 0xe8, 0xa7,
	0x88, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x16, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xa2, 0x06, 0x0a, 0x06, 0x4b, 0x76, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x85,
	0x8d, 0xe7, 0xbd, 0xae, 0xe9, 0xa1, 0xb9, 0xe5, 0x90, 0x8d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x68, 0x0a, 0x07, 0x6b, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x4f, 0x92, 0x41, 0x4c, 0x32, 0x4a, 0xe9, 0x94, 0xae, 0xe5, 0x80, 0xbc, 0xe7, 0xb1, 0xbb,
	0xe5, 0x9e, 0x8b, 0xef, 0xbc, 0x9a, 0x28, 0x61, 0x6e, 0x79, 0xe3, 0x80, 0x81, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0xe3, 0x80, 0x81, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0xe3, 0x80, 0x81, 0x74,
	0x65, 0x78, 0x74, 0xe3, 0x80, 0x81, 0x6a, 0x73, 0x6f, 0x6e, 0xe3, 0x80, 0x81, 0x79, 0x61, 0x6d,
	0x6c, 0xe3, 0x80, 0x81, 0x78, 0x6d, 0x6c, 0xe3, 0x80, 0x81, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x29, 0x52, 0x06, 0x6b, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9,
	0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe9, 0xa1, 0xb9, 0xe5, 0x80, 0xbc, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x12, 0x6e, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4d, 0x92, 0x41, 0x4a, 0x32, 0x48, 0xe5,
	0xaf, 0x86, 0xe9, 0x92, 0xa5, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xef, 0xbc, 0x9a, 0x28, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0xe3, 0x80, 0x81, 0xe3, 0x80, 0x81, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0xe3, 0x80, 0x81, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0xe3, 0x80, 0x81, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0xe3, 0x80, 0x81,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x29, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x2b, 0x92, 0x41, 0x28, 0x32,
	0x26, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe9, 0x9a, 0x90, 0xe8, 0x97, 0x8f, 0xe5, 0x80, 0xbc,
	0xef, 0xbc, 0x9a, 0xe6, 0x98, 0xaf, 0x3d, 0x74, 0x72, 0x75, 0x65, 0xef, 0xbc, 0x8c, 0xe5, 0x90,
	0xa6, 0x3d, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x57, 0x0a, 0x1b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe8, 0xaf, 0x81, 0xe4, 0xb9, 0xa6, 0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x9f, 0xe6, 0x97, 0xb6,
	0xe9, 0x97, 0xb4, 0x52, 0x19, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3d,
	0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe6,
	0x89, 0x98, 0xe7, 0xae, 0xa1, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0x49, 0x44, 0x52, 0x0e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a,
	0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11,
	0xe5, 0xa4, 0x96, 0xe9, 0x83, 0xa8, 0xe6, 0xba, 0x90, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0x49,
	0x44, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xbf, 0x87,
	0xe6, 0xbb, 0xa4, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0xe7, 0x9a, 0x84, 0xe6, 0x9d, 0xa1, 0xe4,
	0xbb, 0xb6, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32,
	0x15, 0xe8, 0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0xe7, 0x9a, 0x84,
	0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x0c, 0x4b, 0x76, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a,
	0xa1, 0x49, 0x44, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0x49, 0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54,
	0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x4b, 0x69, 0x6e, 0x67, 0x2f, 0x62,
	0x6b, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6b, 0x76, 0x3b, 0x70, 0x62, 0x6b, 0x76,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kvs_proto_rawDescOnce sync.Once
	file_kvs_proto_rawDescData = file_kvs_proto_rawDesc
)

func file_kvs_proto_rawDescGZIP() []byte {
	file_kvs_proto_rawDescOnce.Do(func() {
		file_kvs_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvs_proto_rawDescData)
	})
	return file_kvs_proto_rawDescData
}

var file_kvs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kvs_proto_goTypes = []interface{}{
	(*Kv)(nil),                  // 0: pbkv.Kv
	(*KvSpec)(nil),              // 1: pbkv.KvSpec
	(*KvAttachment)(nil),        // 2: pbkv.KvAttachment
	(*base.Revision)(nil),       // 3: pbbase.Revision
	(*content.ContentSpec)(nil), // 4: pbcontent.ContentSpec
	(*structpb.Struct)(nil),     // 5: google.protobuf.Struct
}
var file_kvs_proto_depIdxs = []int32{
	1, // 0: pbkv.Kv.spec:type_name -> pbkv.KvSpec
	2, // 1: pbkv.Kv.attachment:type_name -> pbkv.KvAttachment
	3, // 2: pbkv.Kv.revision:type_name -> pbbase.Revision
	4, // 3: pbkv.Kv.content_spec:type_name -> pbcontent.ContentSpec
	5, // 4: pbkv.KvSpec.filter_condition:type_name -> google.protobuf.Struct
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_kvs_proto_init() }
func file_kvs_proto_init() {
	if File_kvs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kvs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kvs_proto_goTypes,
		DependencyIndexes: file_kvs_proto_depIdxs,
		MessageInfos:      file_kvs_proto_msgTypes,
	}.Build()
	File_kvs_proto = out.File
	file_kvs_proto_rawDesc = nil
	file_kvs_proto_goTypes = nil
	file_kvs_proto_depIdxs = nil
}
