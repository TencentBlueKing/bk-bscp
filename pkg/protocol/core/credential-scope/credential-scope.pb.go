// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: credential-scope.proto

package pbcrs

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CredentialScopeAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	CredentialId  uint32                 `protobuf:"varint,2,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialScopeAttachment) Reset() {
	*x = CredentialScopeAttachment{}
	mi := &file_credential_scope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialScopeAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialScopeAttachment) ProtoMessage() {}

func (x *CredentialScopeAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_credential_scope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialScopeAttachment.ProtoReflect.Descriptor instead.
func (*CredentialScopeAttachment) Descriptor() ([]byte, []int) {
	return file_credential_scope_proto_rawDescGZIP(), []int{0}
}

func (x *CredentialScopeAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *CredentialScopeAttachment) GetCredentialId() uint32 {
	if x != nil {
		return x.CredentialId
	}
	return 0
}

type CredentialScopeList struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Id            uint32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *CredentialScopeSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment    *CredentialScopeAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.Revision             `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialScopeList) Reset() {
	*x = CredentialScopeList{}
	mi := &file_credential_scope_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialScopeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialScopeList) ProtoMessage() {}

func (x *CredentialScopeList) ProtoReflect() protoreflect.Message {
	mi := &file_credential_scope_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialScopeList.ProtoReflect.Descriptor instead.
func (*CredentialScopeList) Descriptor() ([]byte, []int) {
	return file_credential_scope_proto_rawDescGZIP(), []int{1}
}

func (x *CredentialScopeList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CredentialScopeList) GetSpec() *CredentialScopeSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *CredentialScopeList) GetAttachment() *CredentialScopeAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CredentialScopeList) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

type CredentialScopeSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           string                 `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Scope         string                 `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialScopeSpec) Reset() {
	*x = CredentialScopeSpec{}
	mi := &file_credential_scope_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialScopeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialScopeSpec) ProtoMessage() {}

func (x *CredentialScopeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_credential_scope_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialScopeSpec.ProtoReflect.Descriptor instead.
func (*CredentialScopeSpec) Descriptor() ([]byte, []int) {
	return file_credential_scope_proto_rawDescGZIP(), []int{2}
}

func (x *CredentialScopeSpec) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *CredentialScopeSpec) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type UpdateScopeSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	App           string                 `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	Scope         string                 `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScopeSpec) Reset() {
	*x = UpdateScopeSpec{}
	mi := &file_credential_scope_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScopeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScopeSpec) ProtoMessage() {}

func (x *UpdateScopeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_credential_scope_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScopeSpec.ProtoReflect.Descriptor instead.
func (*UpdateScopeSpec) Descriptor() ([]byte, []int) {
	return file_credential_scope_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateScopeSpec) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScopeSpec) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *UpdateScopeSpec) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

var File_credential_scope_proto protoreflect.FileDescriptor

const file_credential_scope_proto_rawDesc = "" +
	"\n" +
	"\x16credential-scope.proto\x12\x05pbcrs\x1a!pkg/protocol/core/base/base.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"~\n" +
	"\x19CredentialScopeAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\x12;\n" +
	"\rcredential_id\x18\x02 \x01(\rB\x16\x92A\x132\x11客户端密钥IDR\fcredentialId\"\xe9\x01\n" +
	"\x13CredentialScopeList\x122\n" +
	"\x02id\x18\x01 \x01(\rB\"\x92A\x1f2\x1d客户端密钥关联服务IDR\x02id\x12.\n" +
	"\x04spec\x18\x02 \x01(\v2\x1a.pbcrs.CredentialScopeSpecR\x04spec\x12@\n" +
	"\n" +
	"attachment\x18\x03 \x01(\v2 .pbcrs.CredentialScopeAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\x04 \x01(\v2\x10.pbbase.RevisionR\brevision\"c\n" +
	"\x13CredentialScopeSpec\x12#\n" +
	"\x03app\x18\x01 \x01(\tB\x11\x92A\x0e2\f服务名称R\x03app\x12'\n" +
	"\x05scope\x18\x02 \x01(\tB\x11\x92A\x0e2\f关联规则R\x05scope\"\x93\x01\n" +
	"\x0fUpdateScopeSpec\x122\n" +
	"\x02id\x18\x01 \x01(\rB\"\x92A\x1f2\x1d客户端密钥关联服务IDR\x02id\x12#\n" +
	"\x03app\x18\x02 \x01(\tB\x11\x92A\x0e2\f服务名称R\x03app\x12'\n" +
	"\x05scope\x18\x03 \x01(\tB\x11\x92A\x0e2\f关联规则R\x05scopeBMZKgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/credential-scope;pbcrsb\x06proto3"

var (
	file_credential_scope_proto_rawDescOnce sync.Once
	file_credential_scope_proto_rawDescData []byte
)

func file_credential_scope_proto_rawDescGZIP() []byte {
	file_credential_scope_proto_rawDescOnce.Do(func() {
		file_credential_scope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_credential_scope_proto_rawDesc), len(file_credential_scope_proto_rawDesc)))
	})
	return file_credential_scope_proto_rawDescData
}

var file_credential_scope_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_credential_scope_proto_goTypes = []any{
	(*CredentialScopeAttachment)(nil), // 0: pbcrs.CredentialScopeAttachment
	(*CredentialScopeList)(nil),       // 1: pbcrs.CredentialScopeList
	(*CredentialScopeSpec)(nil),       // 2: pbcrs.CredentialScopeSpec
	(*UpdateScopeSpec)(nil),           // 3: pbcrs.UpdateScopeSpec
	(*base.Revision)(nil),             // 4: pbbase.Revision
}
var file_credential_scope_proto_depIdxs = []int32{
	2, // 0: pbcrs.CredentialScopeList.spec:type_name -> pbcrs.CredentialScopeSpec
	0, // 1: pbcrs.CredentialScopeList.attachment:type_name -> pbcrs.CredentialScopeAttachment
	4, // 2: pbcrs.CredentialScopeList.revision:type_name -> pbbase.Revision
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_credential_scope_proto_init() }
func file_credential_scope_proto_init() {
	if File_credential_scope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_credential_scope_proto_rawDesc), len(file_credential_scope_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_credential_scope_proto_goTypes,
		DependencyIndexes: file_credential_scope_proto_depIdxs,
		MessageInfos:      file_credential_scope_proto_msgTypes,
	}.Build()
	File_credential_scope_proto = out.File
	file_credential_scope_proto_goTypes = nil
	file_credential_scope_proto_depIdxs = nil
}
