// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: config_item.proto

package pbci

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	commit "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/commit"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConfigItem source resource reference: pkg/dal/table/config_item.go
type ConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigItemId  uint32                 `protobuf:"varint,2,opt,name=config_item_id,json=configItemId,proto3" json:"config_item_id,omitempty"`
	FileState     string                 `protobuf:"bytes,3,opt,name=file_state,json=fileState,proto3" json:"file_state,omitempty"`
	Spec          *ConfigItemSpec        `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	CommitSpec    *commit.CommitSpec     `protobuf:"bytes,5,opt,name=commit_spec,json=commitSpec,proto3" json:"commit_spec,omitempty"`
	Attachment    *ConfigItemAttachment  `protobuf:"bytes,6,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.Revision         `protobuf:"bytes,7,opt,name=revision,proto3" json:"revision,omitempty"`
	IsConflict    bool                   `protobuf:"varint,8,opt,name=is_conflict,json=isConflict,proto3" json:"is_conflict,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	mi := &file_config_item_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_item_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_config_item_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigItem) GetConfigItemId() uint32 {
	if x != nil {
		return x.ConfigItemId
	}
	return 0
}

func (x *ConfigItem) GetFileState() string {
	if x != nil {
		return x.FileState
	}
	return ""
}

func (x *ConfigItem) GetSpec() *ConfigItemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ConfigItem) GetCommitSpec() *commit.CommitSpec {
	if x != nil {
		return x.CommitSpec
	}
	return nil
}

func (x *ConfigItem) GetAttachment() *ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *ConfigItem) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *ConfigItem) GetIsConflict() bool {
	if x != nil {
		return x.IsConflict
	}
	return false
}

// ConfigItemSpec source resource reference: pkg/dal/table/config_item.go
type ConfigItemSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	FileType      string                 `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode      string                 `protobuf:"bytes,4,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	Memo          string                 `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	Permission    *FilePermission        `protobuf:"bytes,6,opt,name=permission,proto3" json:"permission,omitempty"`
	Charset       string                 `protobuf:"bytes,7,opt,name=charset,proto3" json:"charset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItemSpec) Reset() {
	*x = ConfigItemSpec{}
	mi := &file_config_item_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItemSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItemSpec) ProtoMessage() {}

func (x *ConfigItemSpec) ProtoReflect() protoreflect.Message {
	mi := &file_config_item_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItemSpec.ProtoReflect.Descriptor instead.
func (*ConfigItemSpec) Descriptor() ([]byte, []int) {
	return file_config_item_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigItemSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigItemSpec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ConfigItemSpec) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ConfigItemSpec) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *ConfigItemSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *ConfigItemSpec) GetPermission() *FilePermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *ConfigItemSpec) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

// ConfigItemAttachment source resource reference: pkg/dal/table/config_item.go
type ConfigItemAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId         uint32                 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItemAttachment) Reset() {
	*x = ConfigItemAttachment{}
	mi := &file_config_item_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItemAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItemAttachment) ProtoMessage() {}

func (x *ConfigItemAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_config_item_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItemAttachment.ProtoReflect.Descriptor instead.
func (*ConfigItemAttachment) Descriptor() ([]byte, []int) {
	return file_config_item_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigItemAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ConfigItemAttachment) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

// FilePermission source resource reference: pkg/dal/table/config_item.go
type FilePermission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup     string                 `protobuf:"bytes,2,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege     string                 `protobuf:"bytes,3,opt,name=privilege,proto3" json:"privilege,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilePermission) Reset() {
	*x = FilePermission{}
	mi := &file_config_item_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePermission) ProtoMessage() {}

func (x *FilePermission) ProtoReflect() protoreflect.Message {
	mi := &file_config_item_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePermission.ProtoReflect.Descriptor instead.
func (*FilePermission) Descriptor() ([]byte, []int) {
	return file_config_item_proto_rawDescGZIP(), []int{3}
}

func (x *FilePermission) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *FilePermission) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *FilePermission) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

// ListConfigItemCounts source resource reference: pkg/dal/table/config_item.go
type ListConfigItemCounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         uint32                 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Count         uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	UpdateAt      string                 `protobuf:"bytes,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConfigItemCounts) Reset() {
	*x = ListConfigItemCounts{}
	mi := &file_config_item_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConfigItemCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemCounts) ProtoMessage() {}

func (x *ListConfigItemCounts) ProtoReflect() protoreflect.Message {
	mi := &file_config_item_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemCounts.ProtoReflect.Descriptor instead.
func (*ListConfigItemCounts) Descriptor() ([]byte, []int) {
	return file_config_item_proto_rawDescGZIP(), []int{4}
}

func (x *ListConfigItemCounts) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListConfigItemCounts) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListConfigItemCounts) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

var File_config_item_proto protoreflect.FileDescriptor

const file_config_item_proto_rawDesc = "" +
	"\n" +
	"\x11config_item.proto\x12\x04pbci\x1a!pkg/protocol/core/base/base.proto\x1a%pkg/protocol/core/commit/commit.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xee\x03\n" +
	"\n" +
	"ConfigItem\x12&\n" +
	"\x02id\x18\x01 \x01(\rB\x16\x92A\x132\x11文件配置项IDR\x02id\x12<\n" +
	"\x0econfig_item_id\x18\x02 \x01(\rB\x16\x92A\x132\x11文件配置项IDR\fconfigItemId\x12^\n" +
	"\n" +
	"file_state\x18\x03 \x01(\tB?\x92A<2:文件配置项状态：(ADD、DELETE、REVISE、UNCHANGE)R\tfileState\x12(\n" +
	"\x04spec\x18\x04 \x01(\v2\x14.pbci.ConfigItemSpecR\x04spec\x125\n" +
	"\vcommit_spec\x18\x05 \x01(\v2\x14.pbcommit.CommitSpecR\n" +
	"commitSpec\x12:\n" +
	"\n" +
	"attachment\x18\x06 \x01(\v2\x1a.pbci.ConfigItemAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\a \x01(\v2\x10.pbbase.RevisionR\brevision\x12O\n" +
	"\vis_conflict\x18\b \x01(\bB.\x92A+2)是否存在冲突：是=true，否=falseR\n" +
	"isConflict\"\xea\x02\n" +
	"\x0eConfigItemSpec\x12\"\n" +
	"\x04name\x18\x01 \x01(\tB\x0e\x92A\v2\t文件名R\x04name\x12%\n" +
	"\x04path\x18\x02 \x01(\tB\x11\x92A\x0e2\f文件路径R\x04path\x12`\n" +
	"\tfile_type\x18\x03 \x01(\tBC\x92A@2>配置文件格式：文本文件=file, 二进制文件=binaryR\bfileType\x124\n" +
	"\tfile_mode\x18\x04 \x01(\tB\x17\x92A\x142\f文件模式:\x04unixR\bfileMode\x12%\n" +
	"\x04memo\x18\x05 \x01(\tB\x11\x92A\x0e2\f文件描述R\x04memo\x124\n" +
	"\n" +
	"permission\x18\x06 \x01(\v2\x14.pbci.FilePermissionR\n" +
	"permission\x12\x18\n" +
	"\acharset\x18\a \x01(\tR\acharset\"b\n" +
	"\x14ConfigItemAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\x12$\n" +
	"\x06app_id\x18\x02 \x01(\rB\r\x92A\n" +
	"2\b服务IDR\x05appId\"\x9c\x01\n" +
	"\x0eFilePermission\x12\"\n" +
	"\x04user\x18\x01 \x01(\tB\x0e\x92A\v2\t用户名R\x04user\x120\n" +
	"\n" +
	"user_group\x18\x02 \x01(\tB\x11\x92A\x0e2\f用户组名R\tuserGroup\x124\n" +
	"\tprivilege\x18\x03 \x01(\tB\x16\x92A\x132\f文件权限J\x03644R\tprivilege\"\x8f\x01\n" +
	"\x14ListConfigItemCounts\x12$\n" +
	"\x06app_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b服务IDR\x05appId\x12!\n" +
	"\x05count\x18\x02 \x01(\rB\v\x92A\b2\x06总数R\x05count\x12.\n" +
	"\tupdate_at\x18\x03 \x01(\tB\x11\x92A\x0e2\f更新时间R\bupdateAtBGZEgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/config-item;pbcib\x06proto3"

var (
	file_config_item_proto_rawDescOnce sync.Once
	file_config_item_proto_rawDescData []byte
)

func file_config_item_proto_rawDescGZIP() []byte {
	file_config_item_proto_rawDescOnce.Do(func() {
		file_config_item_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_item_proto_rawDesc), len(file_config_item_proto_rawDesc)))
	})
	return file_config_item_proto_rawDescData
}

var file_config_item_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_config_item_proto_goTypes = []any{
	(*ConfigItem)(nil),           // 0: pbci.ConfigItem
	(*ConfigItemSpec)(nil),       // 1: pbci.ConfigItemSpec
	(*ConfigItemAttachment)(nil), // 2: pbci.ConfigItemAttachment
	(*FilePermission)(nil),       // 3: pbci.FilePermission
	(*ListConfigItemCounts)(nil), // 4: pbci.ListConfigItemCounts
	(*commit.CommitSpec)(nil),    // 5: pbcommit.CommitSpec
	(*base.Revision)(nil),        // 6: pbbase.Revision
}
var file_config_item_proto_depIdxs = []int32{
	1, // 0: pbci.ConfigItem.spec:type_name -> pbci.ConfigItemSpec
	5, // 1: pbci.ConfigItem.commit_spec:type_name -> pbcommit.CommitSpec
	2, // 2: pbci.ConfigItem.attachment:type_name -> pbci.ConfigItemAttachment
	6, // 3: pbci.ConfigItem.revision:type_name -> pbbase.Revision
	3, // 4: pbci.ConfigItemSpec.permission:type_name -> pbci.FilePermission
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_config_item_proto_init() }
func file_config_item_proto_init() {
	if File_config_item_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_item_proto_rawDesc), len(file_config_item_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_item_proto_goTypes,
		DependencyIndexes: file_config_item_proto_depIdxs,
		MessageInfos:      file_config_item_proto_msgTypes,
	}.Build()
	File_config_item_proto = out.File
	file_config_item_proto_goTypes = nil
	file_config_item_proto_depIdxs = nil
}
