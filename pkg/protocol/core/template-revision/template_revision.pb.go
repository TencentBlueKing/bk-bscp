// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: template_revision.proto

package pbtr

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	config_item "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/config-item"
	content "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/content"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Template source resource reference: pkg/dal/table/template_revision.go
type TemplateRevision struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            uint32                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *TemplateRevisionSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment    *TemplateRevisionAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.CreatedRevision       `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateRevision) Reset() {
	*x = TemplateRevision{}
	mi := &file_template_revision_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevision) ProtoMessage() {}

func (x *TemplateRevision) ProtoReflect() protoreflect.Message {
	mi := &file_template_revision_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevision.ProtoReflect.Descriptor instead.
func (*TemplateRevision) Descriptor() ([]byte, []int) {
	return file_template_revision_proto_rawDescGZIP(), []int{0}
}

func (x *TemplateRevision) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TemplateRevision) GetSpec() *TemplateRevisionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TemplateRevision) GetAttachment() *TemplateRevisionAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *TemplateRevision) GetRevision() *base.CreatedRevision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// TemplateRevisionSpec source resource reference: pkg/dal/table/template_revision.go
type TemplateRevisionSpec struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	RevisionName  string                      `protobuf:"bytes,1,opt,name=revision_name,json=revisionName,proto3" json:"revision_name,omitempty"`
	RevisionMemo  string                      `protobuf:"bytes,2,opt,name=revision_memo,json=revisionMemo,proto3" json:"revision_memo,omitempty"`
	Name          string                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	FileType      string                      `protobuf:"bytes,5,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode      string                      `protobuf:"bytes,6,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	Permission    *config_item.FilePermission `protobuf:"bytes,7,opt,name=permission,proto3" json:"permission,omitempty"`
	ContentSpec   *content.ContentSpec        `protobuf:"bytes,8,opt,name=content_spec,json=contentSpec,proto3" json:"content_spec,omitempty"`
	Charset       string                      `protobuf:"bytes,9,opt,name=charset,proto3" json:"charset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateRevisionSpec) Reset() {
	*x = TemplateRevisionSpec{}
	mi := &file_template_revision_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRevisionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevisionSpec) ProtoMessage() {}

func (x *TemplateRevisionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_template_revision_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevisionSpec.ProtoReflect.Descriptor instead.
func (*TemplateRevisionSpec) Descriptor() ([]byte, []int) {
	return file_template_revision_proto_rawDescGZIP(), []int{1}
}

func (x *TemplateRevisionSpec) GetRevisionName() string {
	if x != nil {
		return x.RevisionName
	}
	return ""
}

func (x *TemplateRevisionSpec) GetRevisionMemo() string {
	if x != nil {
		return x.RevisionMemo
	}
	return ""
}

func (x *TemplateRevisionSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateRevisionSpec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TemplateRevisionSpec) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *TemplateRevisionSpec) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *TemplateRevisionSpec) GetPermission() *config_item.FilePermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *TemplateRevisionSpec) GetContentSpec() *content.ContentSpec {
	if x != nil {
		return x.ContentSpec
	}
	return nil
}

func (x *TemplateRevisionSpec) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

// TemplateRevisionAttachment source resource reference: pkg/dal/table/template_revision.go
type TemplateRevisionAttachment struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BizId           uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	TemplateSpaceId uint32                 `protobuf:"varint,2,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateId      uint32                 `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TemplateRevisionAttachment) Reset() {
	*x = TemplateRevisionAttachment{}
	mi := &file_template_revision_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRevisionAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevisionAttachment) ProtoMessage() {}

func (x *TemplateRevisionAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_template_revision_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevisionAttachment.ProtoReflect.Descriptor instead.
func (*TemplateRevisionAttachment) Descriptor() ([]byte, []int) {
	return file_template_revision_proto_rawDescGZIP(), []int{2}
}

func (x *TemplateRevisionAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *TemplateRevisionAttachment) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *TemplateRevisionAttachment) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

// TemplateRevisionNamesDetail is template revision names Detail.
type TemplateRevisionNamesDetail struct {
	state                    protoimpl.MessageState                      `protogen:"open.v1"`
	TemplateId               uint32                                      `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateName             string                                      `protobuf:"bytes,2,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	LatestTemplateRevisionId uint32                                      `protobuf:"varint,3,opt,name=latest_template_revision_id,json=latestTemplateRevisionId,proto3" json:"latest_template_revision_id,omitempty"`
	LatestRevisionName       string                                      `protobuf:"bytes,5,opt,name=latest_revision_name,json=latestRevisionName,proto3" json:"latest_revision_name,omitempty"`
	LatestSignature          string                                      `protobuf:"bytes,6,opt,name=latest_signature,json=latestSignature,proto3" json:"latest_signature,omitempty"`
	LatestByteSize           uint64                                      `protobuf:"varint,7,opt,name=latest_byte_size,json=latestByteSize,proto3" json:"latest_byte_size,omitempty"`
	TemplateRevisions        []*TemplateRevisionNamesDetailRevisionNames `protobuf:"bytes,4,rep,name=template_revisions,json=templateRevisions,proto3" json:"template_revisions,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TemplateRevisionNamesDetail) Reset() {
	*x = TemplateRevisionNamesDetail{}
	mi := &file_template_revision_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRevisionNamesDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevisionNamesDetail) ProtoMessage() {}

func (x *TemplateRevisionNamesDetail) ProtoReflect() protoreflect.Message {
	mi := &file_template_revision_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevisionNamesDetail.ProtoReflect.Descriptor instead.
func (*TemplateRevisionNamesDetail) Descriptor() ([]byte, []int) {
	return file_template_revision_proto_rawDescGZIP(), []int{3}
}

func (x *TemplateRevisionNamesDetail) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *TemplateRevisionNamesDetail) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *TemplateRevisionNamesDetail) GetLatestTemplateRevisionId() uint32 {
	if x != nil {
		return x.LatestTemplateRevisionId
	}
	return 0
}

func (x *TemplateRevisionNamesDetail) GetLatestRevisionName() string {
	if x != nil {
		return x.LatestRevisionName
	}
	return ""
}

func (x *TemplateRevisionNamesDetail) GetLatestSignature() string {
	if x != nil {
		return x.LatestSignature
	}
	return ""
}

func (x *TemplateRevisionNamesDetail) GetLatestByteSize() uint64 {
	if x != nil {
		return x.LatestByteSize
	}
	return 0
}

func (x *TemplateRevisionNamesDetail) GetTemplateRevisions() []*TemplateRevisionNamesDetailRevisionNames {
	if x != nil {
		return x.TemplateRevisions
	}
	return nil
}

type TemplateRevisionNamesDetailRevisionNames struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TemplateRevisionId   uint32                 `protobuf:"varint,1,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	TemplateRevisionName string                 `protobuf:"bytes,2,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string                 `protobuf:"bytes,3,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TemplateRevisionNamesDetailRevisionNames) Reset() {
	*x = TemplateRevisionNamesDetailRevisionNames{}
	mi := &file_template_revision_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRevisionNamesDetailRevisionNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevisionNamesDetailRevisionNames) ProtoMessage() {}

func (x *TemplateRevisionNamesDetailRevisionNames) ProtoReflect() protoreflect.Message {
	mi := &file_template_revision_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevisionNamesDetailRevisionNames.ProtoReflect.Descriptor instead.
func (*TemplateRevisionNamesDetailRevisionNames) Descriptor() ([]byte, []int) {
	return file_template_revision_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TemplateRevisionNamesDetailRevisionNames) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *TemplateRevisionNamesDetailRevisionNames) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *TemplateRevisionNamesDetailRevisionNames) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

var File_template_revision_proto protoreflect.FileDescriptor

const file_template_revision_proto_rawDesc = "" +
	"\n" +
	"\x17template_revision.proto\x12\x04pbtr\x1a!pkg/protocol/core/base/base.proto\x1a/pkg/protocol/core/config-item/config_item.proto\x1a'pkg/protocol/core/content/content.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xe4\x01\n" +
	"\x10TemplateRevision\x12)\n" +
	"\x02id\x18\x01 \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x02id\x12.\n" +
	"\x04spec\x18\x02 \x01(\v2\x1a.pbtr.TemplateRevisionSpecR\x04spec\x12@\n" +
	"\n" +
	"attachment\x18\x03 \x01(\v2 .pbtr.TemplateRevisionAttachmentR\n" +
	"attachment\x123\n" +
	"\brevision\x18\x04 \x01(\v2\x17.pbbase.CreatedRevisionR\brevision\"\x89\x04\n" +
	"\x14TemplateRevisionSpec\x12?\n" +
	"\rrevision_name\x18\x01 \x01(\tB\x1a\x92A\x172\x15模板文件版本号R\frevisionName\x12B\n" +
	"\rrevision_memo\x18\x02 \x01(\tB\x1d\x92A\x1a2\x18模板文件版本描述R\frevisionMemo\x12\"\n" +
	"\x04name\x18\x03 \x01(\tB\x0e\x92A\v2\t文件名R\x04name\x12%\n" +
	"\x04path\x18\x04 \x01(\tB\x11\x92A\x0e2\f文件路径R\x04path\x12`\n" +
	"\tfile_type\x18\x05 \x01(\tBC\x92A@2>配置文件格式：文本文件=file, 二进制文件=binaryR\bfileType\x124\n" +
	"\tfile_mode\x18\x06 \x01(\tB\x17\x92A\x142\f文件模式:\x04unixR\bfileMode\x124\n" +
	"\n" +
	"permission\x18\a \x01(\v2\x14.pbci.FilePermissionR\n" +
	"permission\x129\n" +
	"\fcontent_spec\x18\b \x01(\v2\x16.pbcontent.ContentSpecR\vcontentSpec\x12\x18\n" +
	"\acharset\x18\t \x01(\tR\acharset\"\xb9\x01\n" +
	"\x1aTemplateRevisionAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\x12?\n" +
	"\x11template_space_id\x18\x02 \x01(\rB\x13\x92A\x102\x0e模板空间IDR\x0ftemplateSpaceId\x124\n" +
	"\vtemplate_id\x18\x03 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\"\xb7\x06\n" +
	"\x1bTemplateRevisionNamesDetail\x124\n" +
	"\vtemplate_id\x18\x01 \x01(\rB\x13\x92A\x102\x0e模板文件IDR\n" +
	"templateId\x129\n" +
	"\rtemplate_name\x18\x02 \x01(\tB\x14\x92A\x112\x0f模板文件名R\ftemplateName\x12^\n" +
	"\x1blatest_template_revision_id\x18\x03 \x01(\rB\x1f\x92A\x1c2\x1a最新模板文件版本IDR\x18latestTemplateRevisionId\x12R\n" +
	"\x14latest_revision_name\x18\x05 \x01(\tB \x92A\x1d2\x1b最新模板文件版本名R\x12latestRevisionName\x12E\n" +
	"\x10latest_signature\x18\x06 \x01(\tB\x1a\x92A\x172\x15最新文件的sha256R\x0flatestSignature\x12D\n" +
	"\x10latest_byte_size\x18\a \x01(\x04B\x1a\x92A\x172\x15最新文件的大小R\x0elatestByteSize\x12_\n" +
	"\x12template_revisions\x18\x04 \x03(\v20.pbtr.TemplateRevisionNamesDetail.revision_namesR\x11templateRevisions\x1a\x84\x02\n" +
	"\x0erevision_names\x12K\n" +
	"\x14template_revision_id\x18\x01 \x01(\rB\x19\x92A\x162\x14模板文件版本IDR\x12templateRevisionId\x12P\n" +
	"\x16template_revision_name\x18\x02 \x01(\tB\x1a\x92A\x172\x15模板文件版本名R\x14templateRevisionName\x12S\n" +
	"\x16template_revision_memo\x18\x03 \x01(\tB\x1d\x92A\x1a2\x18模板文件版本描述R\x14templateRevisionMemoBMZKgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/template-revision;pbtrb\x06proto3"

var (
	file_template_revision_proto_rawDescOnce sync.Once
	file_template_revision_proto_rawDescData []byte
)

func file_template_revision_proto_rawDescGZIP() []byte {
	file_template_revision_proto_rawDescOnce.Do(func() {
		file_template_revision_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_template_revision_proto_rawDesc), len(file_template_revision_proto_rawDesc)))
	})
	return file_template_revision_proto_rawDescData
}

var file_template_revision_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_template_revision_proto_goTypes = []any{
	(*TemplateRevision)(nil),                         // 0: pbtr.TemplateRevision
	(*TemplateRevisionSpec)(nil),                     // 1: pbtr.TemplateRevisionSpec
	(*TemplateRevisionAttachment)(nil),               // 2: pbtr.TemplateRevisionAttachment
	(*TemplateRevisionNamesDetail)(nil),              // 3: pbtr.TemplateRevisionNamesDetail
	(*TemplateRevisionNamesDetailRevisionNames)(nil), // 4: pbtr.TemplateRevisionNamesDetail.revision_names
	(*base.CreatedRevision)(nil),                     // 5: pbbase.CreatedRevision
	(*config_item.FilePermission)(nil),               // 6: pbci.FilePermission
	(*content.ContentSpec)(nil),                      // 7: pbcontent.ContentSpec
}
var file_template_revision_proto_depIdxs = []int32{
	1, // 0: pbtr.TemplateRevision.spec:type_name -> pbtr.TemplateRevisionSpec
	2, // 1: pbtr.TemplateRevision.attachment:type_name -> pbtr.TemplateRevisionAttachment
	5, // 2: pbtr.TemplateRevision.revision:type_name -> pbbase.CreatedRevision
	6, // 3: pbtr.TemplateRevisionSpec.permission:type_name -> pbci.FilePermission
	7, // 4: pbtr.TemplateRevisionSpec.content_spec:type_name -> pbcontent.ContentSpec
	4, // 5: pbtr.TemplateRevisionNamesDetail.template_revisions:type_name -> pbtr.TemplateRevisionNamesDetail.revision_names
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_template_revision_proto_init() }
func file_template_revision_proto_init() {
	if File_template_revision_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_template_revision_proto_rawDesc), len(file_template_revision_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_template_revision_proto_goTypes,
		DependencyIndexes: file_template_revision_proto_depIdxs,
		MessageInfos:      file_template_revision_proto_msgTypes,
	}.Build()
	File_template_revision_proto = out.File
	file_template_revision_proto_goTypes = nil
	file_template_revision_proto_depIdxs = nil
}
