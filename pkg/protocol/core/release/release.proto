syntax = "proto3";

import "google/protobuf/struct.proto";
import "pkg/protocol/core/base/base.proto";
import "pkg/protocol/core/strategy/strategy.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

package pbrelease;

option go_package = "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/release;pbrelease";

// Release source resource reference: pkg/dal/table/release.go
message Release {
  uint32 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "服务版本ID" }];
  ReleaseSpec spec = 2;
  ReleaseStatus status = 3;
  ReleaseAttachment attachment = 4;
  pbbase.CreatedRevision revision = 5;
}

// ReleaseSpec source resource reference: pkg/dal/table/release.go
message ReleaseSpec {
  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "版本名称" }];
  string memo = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "版本描述" }];
  bool deprecated = 3
      [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "是否弃用：是=true，否=false" }];
  uint32 publish_num = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "发布数量" }];
}

// ReleaseStatus status that not in db
message ReleaseStatus {
  message ReleasedGroup {
    uint32 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "版本分组ID" }];
    string name = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "服务版本分组名" }];
    string mode = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分组类型（枚举值：custom、debug、default）"
    }];
    google.protobuf.Struct old_selector = 4
        [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "当前线上分组选择器" }];
    google.protobuf.Struct new_selector = 5
        [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "修改后的分组选择器" }];
    string uid = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "调试分组的实例UID" }];
    bool edited = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "是否为已编辑状态" }];
  }
  string publish_status = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "版本状态（枚举值：not_released、partial_released、full_released）"
  }];
  repeated ReleasedGroup released_groups = 2;
  // 是否全量发布过,或者发布过默认分组
  bool fully_released = 3;
  string strategy_status = 4;
}

// ReleaseAttachment source resource reference: pkg/dal/table/release.go
message ReleaseAttachment {
  uint32 biz_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "业务ID" }];
  uint32 app_id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description: "服务ID" }];
}

// PublishRecord list publish relate field
message PublishRecord {
  string publish_time = 1;
  string name = 2;
  pbstrategy.Scope scope = 3;
  string creator = 4;
  bool fully_released = 5;
  string updated_at = 6;
  string final_approval_time = 7;
}

// Ticket 工单
message Ticket {
  string id = 1;
  string sn = 2;
  string title = 3;
  string created_at = 4;
  string updated_at = 5;
  string end_at = 6;
  string status = 7;
  string status_display = 8;
  string workflow_id = 9;
  string service_id = 10;
  string portal_id = 11;
  string system_id = 12;
  repeated google.protobuf.Value current_processors = 13;
  repeated CurrentSteps current_steps = 14;
  string frontend_url = 15;
  FormData form_data = 16;
  bool approve_result = 17;
  CallbackResult callback_result = 18;
}

// CurrentSteps 当前审批步骤
message CurrentSteps {
  string ticket_id = 1;
  string name = 2;
  string activity_key = 3;
}

// FormData 表单数据
message FormData {
  string ticket_title = 1;
}
// CallbackResult 回调结果（目前空）
message CallbackResult {}