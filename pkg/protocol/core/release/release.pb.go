// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: release.proto

package pbrelease

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	strategy "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/strategy"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Release source resource reference: pkg/dal/table/release.go
type Release struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *ReleaseSpec           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *ReleaseStatus         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Attachment    *ReleaseAttachment     `protobuf:"bytes,4,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision      *base.CreatedRevision  `protobuf:"bytes,5,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_release_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{0}
}

func (x *Release) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Release) GetSpec() *ReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Release) GetStatus() *ReleaseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Release) GetAttachment() *ReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *Release) GetRevision() *base.CreatedRevision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// ReleaseSpec source resource reference: pkg/dal/table/release.go
type ReleaseSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Memo          string                 `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	Deprecated    bool                   `protobuf:"varint,3,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	PublishNum    uint32                 `protobuf:"varint,4,opt,name=publish_num,json=publishNum,proto3" json:"publish_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseSpec) Reset() {
	*x = ReleaseSpec{}
	mi := &file_release_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSpec) ProtoMessage() {}

func (x *ReleaseSpec) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSpec.ProtoReflect.Descriptor instead.
func (*ReleaseSpec) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleaseSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *ReleaseSpec) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *ReleaseSpec) GetPublishNum() uint32 {
	if x != nil {
		return x.PublishNum
	}
	return 0
}

// ReleaseStatus status that not in db
type ReleaseStatus struct {
	state          protoimpl.MessageState         `protogen:"open.v1"`
	PublishStatus  string                         `protobuf:"bytes,1,opt,name=publish_status,json=publishStatus,proto3" json:"publish_status,omitempty"`
	ReleasedGroups []*ReleaseStatus_ReleasedGroup `protobuf:"bytes,2,rep,name=released_groups,json=releasedGroups,proto3" json:"released_groups,omitempty"`
	// 是否全量发布过,或者发布过默认分组
	FullyReleased  bool   `protobuf:"varint,3,opt,name=fully_released,json=fullyReleased,proto3" json:"fully_released,omitempty"`
	StrategyStatus string `protobuf:"bytes,4,opt,name=strategy_status,json=strategyStatus,proto3" json:"strategy_status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReleaseStatus) Reset() {
	*x = ReleaseStatus{}
	mi := &file_release_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseStatus) ProtoMessage() {}

func (x *ReleaseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseStatus.ProtoReflect.Descriptor instead.
func (*ReleaseStatus) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseStatus) GetPublishStatus() string {
	if x != nil {
		return x.PublishStatus
	}
	return ""
}

func (x *ReleaseStatus) GetReleasedGroups() []*ReleaseStatus_ReleasedGroup {
	if x != nil {
		return x.ReleasedGroups
	}
	return nil
}

func (x *ReleaseStatus) GetFullyReleased() bool {
	if x != nil {
		return x.FullyReleased
	}
	return false
}

func (x *ReleaseStatus) GetStrategyStatus() string {
	if x != nil {
		return x.StrategyStatus
	}
	return ""
}

// ReleaseAttachment source resource reference: pkg/dal/table/release.go
type ReleaseAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId         uint32                 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseAttachment) Reset() {
	*x = ReleaseAttachment{}
	mi := &file_release_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAttachment) ProtoMessage() {}

func (x *ReleaseAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAttachment.ProtoReflect.Descriptor instead.
func (*ReleaseAttachment) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ReleaseAttachment) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

// PublishRecord list publish relate field
type PublishRecord struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PublishTime       string                 `protobuf:"bytes,1,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Scope             *strategy.Scope        `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	Creator           string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	FullyReleased     bool                   `protobuf:"varint,5,opt,name=fully_released,json=fullyReleased,proto3" json:"fully_released,omitempty"`
	UpdatedAt         string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FinalApprovalTime string                 `protobuf:"bytes,7,opt,name=final_approval_time,json=finalApprovalTime,proto3" json:"final_approval_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PublishRecord) Reset() {
	*x = PublishRecord{}
	mi := &file_release_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRecord) ProtoMessage() {}

func (x *PublishRecord) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRecord.ProtoReflect.Descriptor instead.
func (*PublishRecord) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{4}
}

func (x *PublishRecord) GetPublishTime() string {
	if x != nil {
		return x.PublishTime
	}
	return ""
}

func (x *PublishRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublishRecord) GetScope() *strategy.Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *PublishRecord) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PublishRecord) GetFullyReleased() bool {
	if x != nil {
		return x.FullyReleased
	}
	return false
}

func (x *PublishRecord) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PublishRecord) GetFinalApprovalTime() string {
	if x != nil {
		return x.FinalApprovalTime
	}
	return ""
}

// Ticket 工单
type Ticket struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sn                string                 `protobuf:"bytes,2,opt,name=sn,proto3" json:"sn,omitempty"`
	Title             string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	CreatedAt         string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	EndAt             string                 `protobuf:"bytes,6,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	Status            string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	StatusDisplay     string                 `protobuf:"bytes,8,opt,name=status_display,json=statusDisplay,proto3" json:"status_display,omitempty"`
	WorkflowId        string                 `protobuf:"bytes,9,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ServiceId         string                 `protobuf:"bytes,10,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	PortalId          string                 `protobuf:"bytes,11,opt,name=portal_id,json=portalId,proto3" json:"portal_id,omitempty"`
	SystemId          string                 `protobuf:"bytes,12,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	CurrentProcessors []*structpb.Value      `protobuf:"bytes,13,rep,name=current_processors,json=currentProcessors,proto3" json:"current_processors,omitempty"`
	CurrentSteps      []*CurrentSteps        `protobuf:"bytes,14,rep,name=current_steps,json=currentSteps,proto3" json:"current_steps,omitempty"`
	FrontendUrl       string                 `protobuf:"bytes,15,opt,name=frontend_url,json=frontendUrl,proto3" json:"frontend_url,omitempty"`
	FormData          *FormData              `protobuf:"bytes,16,opt,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	ApproveResult     bool                   `protobuf:"varint,17,opt,name=approve_result,json=approveResult,proto3" json:"approve_result,omitempty"`
	CallbackResult    *CallbackResult        `protobuf:"bytes,18,opt,name=callback_result,json=callbackResult,proto3" json:"callback_result,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	mi := &file_release_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{5}
}

func (x *Ticket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ticket) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *Ticket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Ticket) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Ticket) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Ticket) GetEndAt() string {
	if x != nil {
		return x.EndAt
	}
	return ""
}

func (x *Ticket) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Ticket) GetStatusDisplay() string {
	if x != nil {
		return x.StatusDisplay
	}
	return ""
}

func (x *Ticket) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Ticket) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Ticket) GetPortalId() string {
	if x != nil {
		return x.PortalId
	}
	return ""
}

func (x *Ticket) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *Ticket) GetCurrentProcessors() []*structpb.Value {
	if x != nil {
		return x.CurrentProcessors
	}
	return nil
}

func (x *Ticket) GetCurrentSteps() []*CurrentSteps {
	if x != nil {
		return x.CurrentSteps
	}
	return nil
}

func (x *Ticket) GetFrontendUrl() string {
	if x != nil {
		return x.FrontendUrl
	}
	return ""
}

func (x *Ticket) GetFormData() *FormData {
	if x != nil {
		return x.FormData
	}
	return nil
}

func (x *Ticket) GetApproveResult() bool {
	if x != nil {
		return x.ApproveResult
	}
	return false
}

func (x *Ticket) GetCallbackResult() *CallbackResult {
	if x != nil {
		return x.CallbackResult
	}
	return nil
}

// CurrentSteps 当前审批步骤
type CurrentSteps struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ActivityKey   string                 `protobuf:"bytes,3,opt,name=activity_key,json=activityKey,proto3" json:"activity_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentSteps) Reset() {
	*x = CurrentSteps{}
	mi := &file_release_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentSteps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentSteps) ProtoMessage() {}

func (x *CurrentSteps) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentSteps.ProtoReflect.Descriptor instead.
func (*CurrentSteps) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{6}
}

func (x *CurrentSteps) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *CurrentSteps) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrentSteps) GetActivityKey() string {
	if x != nil {
		return x.ActivityKey
	}
	return ""
}

// FormData 表单数据
type FormData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketTitle   string                 `protobuf:"bytes,1,opt,name=ticket_title,json=ticketTitle,proto3" json:"ticket_title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormData) Reset() {
	*x = FormData{}
	mi := &file_release_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormData) ProtoMessage() {}

func (x *FormData) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormData.ProtoReflect.Descriptor instead.
func (*FormData) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{7}
}

func (x *FormData) GetTicketTitle() string {
	if x != nil {
		return x.TicketTitle
	}
	return ""
}

// CallbackResult 回调结果（目前空）
type CallbackResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackResult) Reset() {
	*x = CallbackResult{}
	mi := &file_release_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackResult) ProtoMessage() {}

func (x *CallbackResult) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackResult.ProtoReflect.Descriptor instead.
func (*CallbackResult) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{8}
}

type ReleaseStatus_ReleasedGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode          string                 `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	OldSelector   *structpb.Struct       `protobuf:"bytes,4,opt,name=old_selector,json=oldSelector,proto3" json:"old_selector,omitempty"`
	NewSelector   *structpb.Struct       `protobuf:"bytes,5,opt,name=new_selector,json=newSelector,proto3" json:"new_selector,omitempty"`
	Uid           string                 `protobuf:"bytes,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Edited        bool                   `protobuf:"varint,7,opt,name=edited,proto3" json:"edited,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseStatus_ReleasedGroup) Reset() {
	*x = ReleaseStatus_ReleasedGroup{}
	mi := &file_release_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseStatus_ReleasedGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseStatus_ReleasedGroup) ProtoMessage() {}

func (x *ReleaseStatus_ReleasedGroup) ProtoReflect() protoreflect.Message {
	mi := &file_release_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseStatus_ReleasedGroup.ProtoReflect.Descriptor instead.
func (*ReleaseStatus_ReleasedGroup) Descriptor() ([]byte, []int) {
	return file_release_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReleaseStatus_ReleasedGroup) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReleaseStatus_ReleasedGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleaseStatus_ReleasedGroup) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ReleaseStatus_ReleasedGroup) GetOldSelector() *structpb.Struct {
	if x != nil {
		return x.OldSelector
	}
	return nil
}

func (x *ReleaseStatus_ReleasedGroup) GetNewSelector() *structpb.Struct {
	if x != nil {
		return x.NewSelector
	}
	return nil
}

func (x *ReleaseStatus_ReleasedGroup) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReleaseStatus_ReleasedGroup) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

var File_release_proto protoreflect.FileDescriptor

const file_release_proto_rawDesc = "" +
	"\n" +
	"\rrelease.proto\x12\tpbrelease\x1a\x1cgoogle/protobuf/struct.proto\x1a!pkg/protocol/core/base/base.proto\x1a)pkg/protocol/core/strategy/strategy.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xff\x01\n" +
	"\aRelease\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x13\x92A\x102\x0e服务版本IDR\x02id\x12*\n" +
	"\x04spec\x18\x02 \x01(\v2\x16.pbrelease.ReleaseSpecR\x04spec\x120\n" +
	"\x06status\x18\x03 \x01(\v2\x18.pbrelease.ReleaseStatusR\x06status\x12<\n" +
	"\n" +
	"attachment\x18\x04 \x01(\v2\x1c.pbrelease.ReleaseAttachmentR\n" +
	"attachment\x123\n" +
	"\brevision\x18\x05 \x01(\v2\x17.pbbase.CreatedRevisionR\brevision\"\xd9\x01\n" +
	"\vReleaseSpec\x12%\n" +
	"\x04name\x18\x01 \x01(\tB\x11\x92A\x0e2\f版本名称R\x04name\x12%\n" +
	"\x04memo\x18\x02 \x01(\tB\x11\x92A\x0e2\f版本描述R\x04memo\x12H\n" +
	"\n" +
	"deprecated\x18\x03 \x01(\bB(\x92A%2#是否弃用：是=true，否=falseR\n" +
	"deprecated\x122\n" +
	"\vpublish_num\x18\x04 \x01(\rB\x11\x92A\x0e2\f发布数量R\n" +
	"publishNum\"\x87\x06\n" +
	"\rReleaseStatus\x12y\n" +
	"\x0epublish_status\x18\x01 \x01(\tBR\x92AO2M版本状态（枚举值：not_released、partial_released、full_released）R\rpublishStatus\x12O\n" +
	"\x0freleased_groups\x18\x02 \x03(\v2&.pbrelease.ReleaseStatus.ReleasedGroupR\x0ereleasedGroups\x12%\n" +
	"\x0efully_released\x18\x03 \x01(\bR\rfullyReleased\x12'\n" +
	"\x0fstrategy_status\x18\x04 \x01(\tR\x0estrategyStatus\x1a\xd9\x03\n" +
	"\rReleasedGroup\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x13\x92A\x102\x0e版本分组IDR\x02id\x12.\n" +
	"\x04name\x18\x02 \x01(\tB\x1a\x92A\x172\x15服务版本分组名R\x04name\x12O\n" +
	"\x04mode\x18\x03 \x01(\tB;\x92A826分组类型（枚举值：custom、debug、default）R\x04mode\x12\\\n" +
	"\fold_selector\x18\x04 \x01(\v2\x17.google.protobuf.StructB \x92A\x1d2\x1b当前线上分组选择器R\voldSelector\x12\\\n" +
	"\fnew_selector\x18\x05 \x01(\v2\x17.google.protobuf.StructB \x92A\x1d2\x1b修改后的分组选择器R\vnewSelector\x12/\n" +
	"\x03uid\x18\x06 \x01(\tB\x1d\x92A\x1a2\x18调试分组的实例UIDR\x03uid\x125\n" +
	"\x06edited\x18\a \x01(\bB\x1d\x92A\x1a2\x18是否为已编辑状态R\x06edited\"_\n" +
	"\x11ReleaseAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\x12$\n" +
	"\x06app_id\x18\x02 \x01(\rB\r\x92A\n" +
	"2\b服务IDR\x05appId\"\xff\x01\n" +
	"\rPublishRecord\x12!\n" +
	"\fpublish_time\x18\x01 \x01(\tR\vpublishTime\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x05scope\x18\x03 \x01(\v2\x11.pbstrategy.ScopeR\x05scope\x12\x18\n" +
	"\acreator\x18\x04 \x01(\tR\acreator\x12%\n" +
	"\x0efully_released\x18\x05 \x01(\bR\rfullyReleased\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\x12.\n" +
	"\x13final_approval_time\x18\a \x01(\tR\x11finalApprovalTime\"\x91\x05\n" +
	"\x06Ticket\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02sn\x18\x02 \x01(\tR\x02sn\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\tR\tupdatedAt\x12\x15\n" +
	"\x06end_at\x18\x06 \x01(\tR\x05endAt\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12%\n" +
	"\x0estatus_display\x18\b \x01(\tR\rstatusDisplay\x12\x1f\n" +
	"\vworkflow_id\x18\t \x01(\tR\n" +
	"workflowId\x12\x1d\n" +
	"\n" +
	"service_id\x18\n" +
	" \x01(\tR\tserviceId\x12\x1b\n" +
	"\tportal_id\x18\v \x01(\tR\bportalId\x12\x1b\n" +
	"\tsystem_id\x18\f \x01(\tR\bsystemId\x12E\n" +
	"\x12current_processors\x18\r \x03(\v2\x16.google.protobuf.ValueR\x11currentProcessors\x12<\n" +
	"\rcurrent_steps\x18\x0e \x03(\v2\x17.pbrelease.CurrentStepsR\fcurrentSteps\x12!\n" +
	"\ffrontend_url\x18\x0f \x01(\tR\vfrontendUrl\x120\n" +
	"\tform_data\x18\x10 \x01(\v2\x13.pbrelease.FormDataR\bformData\x12%\n" +
	"\x0eapprove_result\x18\x11 \x01(\bR\rapproveResult\x12B\n" +
	"\x0fcallback_result\x18\x12 \x01(\v2\x19.pbrelease.CallbackResultR\x0ecallbackResult\"b\n" +
	"\fCurrentSteps\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\factivity_key\x18\x03 \x01(\tR\vactivityKey\"-\n" +
	"\bFormData\x12!\n" +
	"\fticket_title\x18\x01 \x01(\tR\vticketTitle\"\x10\n" +
	"\x0eCallbackResultBHZFgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/release;pbreleaseb\x06proto3"

var (
	file_release_proto_rawDescOnce sync.Once
	file_release_proto_rawDescData []byte
)

func file_release_proto_rawDescGZIP() []byte {
	file_release_proto_rawDescOnce.Do(func() {
		file_release_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_release_proto_rawDesc), len(file_release_proto_rawDesc)))
	})
	return file_release_proto_rawDescData
}

var file_release_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_release_proto_goTypes = []any{
	(*Release)(nil),                     // 0: pbrelease.Release
	(*ReleaseSpec)(nil),                 // 1: pbrelease.ReleaseSpec
	(*ReleaseStatus)(nil),               // 2: pbrelease.ReleaseStatus
	(*ReleaseAttachment)(nil),           // 3: pbrelease.ReleaseAttachment
	(*PublishRecord)(nil),               // 4: pbrelease.PublishRecord
	(*Ticket)(nil),                      // 5: pbrelease.Ticket
	(*CurrentSteps)(nil),                // 6: pbrelease.CurrentSteps
	(*FormData)(nil),                    // 7: pbrelease.FormData
	(*CallbackResult)(nil),              // 8: pbrelease.CallbackResult
	(*ReleaseStatus_ReleasedGroup)(nil), // 9: pbrelease.ReleaseStatus.ReleasedGroup
	(*base.CreatedRevision)(nil),        // 10: pbbase.CreatedRevision
	(*strategy.Scope)(nil),              // 11: pbstrategy.Scope
	(*structpb.Value)(nil),              // 12: google.protobuf.Value
	(*structpb.Struct)(nil),             // 13: google.protobuf.Struct
}
var file_release_proto_depIdxs = []int32{
	1,  // 0: pbrelease.Release.spec:type_name -> pbrelease.ReleaseSpec
	2,  // 1: pbrelease.Release.status:type_name -> pbrelease.ReleaseStatus
	3,  // 2: pbrelease.Release.attachment:type_name -> pbrelease.ReleaseAttachment
	10, // 3: pbrelease.Release.revision:type_name -> pbbase.CreatedRevision
	9,  // 4: pbrelease.ReleaseStatus.released_groups:type_name -> pbrelease.ReleaseStatus.ReleasedGroup
	11, // 5: pbrelease.PublishRecord.scope:type_name -> pbstrategy.Scope
	12, // 6: pbrelease.Ticket.current_processors:type_name -> google.protobuf.Value
	6,  // 7: pbrelease.Ticket.current_steps:type_name -> pbrelease.CurrentSteps
	7,  // 8: pbrelease.Ticket.form_data:type_name -> pbrelease.FormData
	8,  // 9: pbrelease.Ticket.callback_result:type_name -> pbrelease.CallbackResult
	13, // 10: pbrelease.ReleaseStatus.ReleasedGroup.old_selector:type_name -> google.protobuf.Struct
	13, // 11: pbrelease.ReleaseStatus.ReleasedGroup.new_selector:type_name -> google.protobuf.Struct
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_release_proto_init() }
func file_release_proto_init() {
	if File_release_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_release_proto_rawDesc), len(file_release_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_release_proto_goTypes,
		DependencyIndexes: file_release_proto_depIdxs,
		MessageInfos:      file_release_proto_msgTypes,
	}.Build()
	File_release_proto = out.File
	file_release_proto_goTypes = nil
	file_release_proto_depIdxs = nil
}
