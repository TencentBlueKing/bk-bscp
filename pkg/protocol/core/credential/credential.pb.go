// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: credential.proto

package pbcredential

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CredentialList struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec             *CredentialSpec        `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment       *CredentialAttachment  `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision         *base.Revision         `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	CredentialScopes []string               `protobuf:"bytes,5,rep,name=credential_scopes,json=credentialScopes,proto3" json:"credential_scopes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CredentialList) Reset() {
	*x = CredentialList{}
	mi := &file_credential_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialList) ProtoMessage() {}

func (x *CredentialList) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialList.ProtoReflect.Descriptor instead.
func (*CredentialList) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{0}
}

func (x *CredentialList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CredentialList) GetSpec() *CredentialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *CredentialList) GetAttachment() *CredentialAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CredentialList) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *CredentialList) GetCredentialScopes() []string {
	if x != nil {
		return x.CredentialScopes
	}
	return nil
}

type CredentialSpec struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CredentialType string                 `protobuf:"bytes,1,opt,name=credential_type,json=credentialType,proto3" json:"credential_type,omitempty"`
	EncCredential  string                 `protobuf:"bytes,2,opt,name=enc_credential,json=encCredential,proto3" json:"enc_credential,omitempty"`
	EncAlgorithm   string                 `protobuf:"bytes,3,opt,name=enc_algorithm,json=encAlgorithm,proto3" json:"enc_algorithm,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Memo           string                 `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	Enable         bool                   `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CredentialSpec) Reset() {
	*x = CredentialSpec{}
	mi := &file_credential_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialSpec) ProtoMessage() {}

func (x *CredentialSpec) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialSpec.ProtoReflect.Descriptor instead.
func (*CredentialSpec) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{1}
}

func (x *CredentialSpec) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *CredentialSpec) GetEncCredential() string {
	if x != nil {
		return x.EncCredential
	}
	return ""
}

func (x *CredentialSpec) GetEncAlgorithm() string {
	if x != nil {
		return x.EncAlgorithm
	}
	return ""
}

func (x *CredentialSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CredentialSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *CredentialSpec) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type CredentialAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialAttachment) Reset() {
	*x = CredentialAttachment{}
	mi := &file_credential_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialAttachment) ProtoMessage() {}

func (x *CredentialAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialAttachment.ProtoReflect.Descriptor instead.
func (*CredentialAttachment) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{2}
}

func (x *CredentialAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type CredentialScope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialScope) Reset() {
	*x = CredentialScope{}
	mi := &file_credential_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialScope) ProtoMessage() {}

func (x *CredentialScope) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialScope.ProtoReflect.Descriptor instead.
func (*CredentialScope) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{3}
}

func (x *CredentialScope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

var File_credential_proto protoreflect.FileDescriptor

const file_credential_proto_rawDesc = "" +
	"\n" +
	"\x10credential.proto\x12\fpbcredential\x1a!pkg/protocol/core/base/base.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x9c\x02\n" +
	"\x0eCredentialList\x12&\n" +
	"\x02id\x18\x01 \x01(\rB\x16\x92A\x132\x11客户端密钥IDR\x02id\x120\n" +
	"\x04spec\x18\x02 \x01(\v2\x1c.pbcredential.CredentialSpecR\x04spec\x12B\n" +
	"\n" +
	"attachment\x18\x03 \x01(\v2\".pbcredential.CredentialAttachmentR\n" +
	"attachment\x12,\n" +
	"\brevision\x18\x04 \x01(\v2\x10.pbbase.RevisionR\brevision\x12>\n" +
	"\x11credential_scopes\x18\x05 \x03(\tB\x11\x92A\x0e2\f关联规则R\x10credentialScopes\"\xd6\x02\n" +
	"\x0eCredentialSpec\x12H\n" +
	"\x0fcredential_type\x18\x01 \x01(\tB\x1f\x92A\x1c2\x1a凭证类型：(bearToken)R\x0ecredentialType\x125\n" +
	"\x0eenc_credential\x18\x02 \x01(\tB\x0e\x92A\v2\tenc凭证R\rencCredential\x123\n" +
	"\renc_algorithm\x18\x03 \x01(\tB\x0e\x92A\v2\tenc算法R\fencAlgorithm\x12%\n" +
	"\x04name\x18\x04 \x01(\tB\x11\x92A\x0e2\f密钥名称R\x04name\x12%\n" +
	"\x04memo\x18\x05 \x01(\tB\x11\x92A\x0e2\f密钥说明R\x04memo\x12@\n" +
	"\x06enable\x18\x06 \x01(\bB(\x92A%2#是否启用：是=true，否=falseR\x06enable\"<\n" +
	"\x14CredentialAttachment\x12$\n" +
	"\x06biz_id\x18\x01 \x01(\rB\r\x92A\n" +
	"2\b业务IDR\x05bizId\":\n" +
	"\x0fCredentialScope\x12'\n" +
	"\x05scope\x18\x01 \x01(\tB\x11\x92A\x0e2\f关联规则R\x05scopeBNZLgithub.com/TencentBlueKing/bk-bscp/pkg/protocol/core/credential;pbcredentialb\x06proto3"

var (
	file_credential_proto_rawDescOnce sync.Once
	file_credential_proto_rawDescData []byte
)

func file_credential_proto_rawDescGZIP() []byte {
	file_credential_proto_rawDescOnce.Do(func() {
		file_credential_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_credential_proto_rawDesc), len(file_credential_proto_rawDesc)))
	})
	return file_credential_proto_rawDescData
}

var file_credential_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_credential_proto_goTypes = []any{
	(*CredentialList)(nil),       // 0: pbcredential.CredentialList
	(*CredentialSpec)(nil),       // 1: pbcredential.CredentialSpec
	(*CredentialAttachment)(nil), // 2: pbcredential.CredentialAttachment
	(*CredentialScope)(nil),      // 3: pbcredential.CredentialScope
	(*base.Revision)(nil),        // 4: pbbase.Revision
}
var file_credential_proto_depIdxs = []int32{
	1, // 0: pbcredential.CredentialList.spec:type_name -> pbcredential.CredentialSpec
	2, // 1: pbcredential.CredentialList.attachment:type_name -> pbcredential.CredentialAttachment
	4, // 2: pbcredential.CredentialList.revision:type_name -> pbbase.Revision
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_credential_proto_init() }
func file_credential_proto_init() {
	if File_credential_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_credential_proto_rawDesc), len(file_credential_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_credential_proto_goTypes,
		DependencyIndexes: file_credential_proto_depIdxs,
		MessageInfos:      file_credential_proto_msgTypes,
	}.Build()
	File_credential_proto = out.File
	file_credential_proto_goTypes = nil
	file_credential_proto_depIdxs = nil
}
