// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: feed_server.proto

package pbfs

import (
	base "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/base"
	commit "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/commit"
	config_item "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/config-item"
	content "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/content"
	hook "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/hook"
	kv "github.com/TencentBlueKing/bk-bscp/pkg/protocol/core/kv"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AsyncDownloadStatus int32

const (
	AsyncDownloadStatus_SUCCESS     AsyncDownloadStatus = 0
	AsyncDownloadStatus_DOWNLOADING AsyncDownloadStatus = 1
	AsyncDownloadStatus_FAILED      AsyncDownloadStatus = 2
)

// Enum value maps for AsyncDownloadStatus.
var (
	AsyncDownloadStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "DOWNLOADING",
		2: "FAILED",
	}
	AsyncDownloadStatus_value = map[string]int32{
		"SUCCESS":     0,
		"DOWNLOADING": 1,
		"FAILED":      2,
	}
)

func (x AsyncDownloadStatus) Enum() *AsyncDownloadStatus {
	p := new(AsyncDownloadStatus)
	*p = x
	return p
}

func (x AsyncDownloadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AsyncDownloadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_feed_server_proto_enumTypes[0].Descriptor()
}

func (AsyncDownloadStatus) Type() protoreflect.EnumType {
	return &file_feed_server_proto_enumTypes[0]
}

func (x AsyncDownloadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AsyncDownloadStatus.Descriptor instead.
func (AsyncDownloadStatus) EnumDescriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{0}
}

// SidecarSpec defines a sidecar's specifics.
type SidecarSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	BizId uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// version is sidecar's version
	Version       *base.Versioning `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SidecarSpec) Reset() {
	*x = SidecarSpec{}
	mi := &file_feed_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SidecarSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarSpec) ProtoMessage() {}

func (x *SidecarSpec) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidecarSpec.ProtoReflect.Descriptor instead.
func (*SidecarSpec) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{0}
}

func (x *SidecarSpec) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *SidecarSpec) GetVersion() *base.Versioning {
	if x != nil {
		return x.Version
	}
	return nil
}

// HandshakeMessage defines the handshake message from sidecar to feed server.
type HandshakeMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion    *base.Versioning       `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Spec          *SidecarSpec           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandshakeMessage) Reset() {
	*x = HandshakeMessage{}
	mi := &file_feed_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMessage) ProtoMessage() {}

func (x *HandshakeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMessage.ProtoReflect.Descriptor instead.
func (*HandshakeMessage) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{1}
}

func (x *HandshakeMessage) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *HandshakeMessage) GetSpec() *SidecarSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// HandshakeResp defines handshake resp.
type HandshakeResp struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion *base.Versioning       `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	Payload       []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandshakeResp) Reset() {
	*x = HandshakeResp{}
	mi := &file_feed_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeResp) ProtoMessage() {}

func (x *HandshakeResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeResp.ProtoReflect.Descriptor instead.
func (*HandshakeResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{2}
}

func (x *HandshakeResp) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *HandshakeResp) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// MessagingMeta defines the message metadata send from sdk to upstream server.
type MessagingMeta struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version defines message's protocol version from feed server
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// rid is the message's request id
	Rid string `protobuf:"bytes,2,opt,name=rid,proto3" json:"rid,omitempty"`
	// type is an enum type, it's an substitute of scs.MessagingType.
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	Payload       []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagingMeta) Reset() {
	*x = MessagingMeta{}
	mi := &file_feed_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagingMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingMeta) ProtoMessage() {}

func (x *MessagingMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingMeta.ProtoReflect.Descriptor instead.
func (*MessagingMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{3}
}

func (x *MessagingMeta) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *MessagingMeta) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *MessagingMeta) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessagingMeta) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// MessagingResp defines response from upstream server to sdk,
// which is empty.
type MessagingResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagingResp) Reset() {
	*x = MessagingResp{}
	mi := &file_feed_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingResp) ProtoMessage() {}

func (x *MessagingResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingResp.ProtoReflect.Descriptor instead.
func (*MessagingResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{4}
}

// SideWatchMeta defines watch messages send from sidecar to feed server.
type SideWatchMeta struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	// refer to sfs.SideWatchPayload.
	Payload       []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SideWatchMeta) Reset() {
	*x = SideWatchMeta{}
	mi := &file_feed_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SideWatchMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideWatchMeta) ProtoMessage() {}

func (x *SideWatchMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideWatchMeta.ProtoReflect.Descriptor instead.
func (*SideWatchMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{5}
}

func (x *SideWatchMeta) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *SideWatchMeta) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// FeedWatchMessage defines watch messages send from feed server to sdk.
type FeedWatchMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version defines message's protocol version from feed server
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// rid is the message's request id
	Rid string `protobuf:"bytes,2,opt,name=rid,proto3" json:"rid,omitempty"`
	// type is an enum type, it's an substitute of sfs.FeedMessageType.
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	Payload       []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedWatchMessage) Reset() {
	*x = FeedWatchMessage{}
	mi := &file_feed_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedWatchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedWatchMessage) ProtoMessage() {}

func (x *FeedWatchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedWatchMessage.ProtoReflect.Descriptor instead.
func (*FeedWatchMessage) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{6}
}

func (x *FeedWatchMessage) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *FeedWatchMessage) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *FeedWatchMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FeedWatchMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AppMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           string                 `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Uid           string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMeta) Reset() {
	*x = AppMeta{}
	mi := &file_feed_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMeta) ProtoMessage() {}

func (x *AppMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMeta.ProtoReflect.Descriptor instead.
func (*AppMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{7}
}

func (x *AppMeta) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *AppMeta) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AppMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Repository struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Root          string                 `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Repository) Reset() {
	*x = Repository{}
	mi := &file_feed_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{8}
}

func (x *Repository) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type RepositorySpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositorySpec) Reset() {
	*x = RepositorySpec{}
	mi := &file_feed_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositorySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositorySpec) ProtoMessage() {}

func (x *RepositorySpec) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositorySpec.ProtoReflect.Descriptor instead.
func (*RepositorySpec) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{9}
}

func (x *RepositorySpec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileMeta struct {
	state                protoimpl.MessageState            `protogen:"open.v1"`
	Id                   uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CommitId             uint32                            `protobuf:"varint,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	CommitSpec           *commit.CommitSpec                `protobuf:"bytes,3,opt,name=commit_spec,json=commitSpec,proto3" json:"commit_spec,omitempty"`
	ConfigItemSpec       *config_item.ConfigItemSpec       `protobuf:"bytes,4,opt,name=config_item_spec,json=configItemSpec,proto3" json:"config_item_spec,omitempty"`
	ConfigItemAttachment *config_item.ConfigItemAttachment `protobuf:"bytes,5,opt,name=config_item_attachment,json=configItemAttachment,proto3" json:"config_item_attachment,omitempty"`
	RepositorySpec       *RepositorySpec                   `protobuf:"bytes,6,opt,name=repository_spec,json=repositorySpec,proto3" json:"repository_spec,omitempty"`
	ConfigItemRevision   *base.Revision                    `protobuf:"bytes,7,opt,name=config_item_revision,json=configItemRevision,proto3" json:"config_item_revision,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FileMeta) Reset() {
	*x = FileMeta{}
	mi := &file_feed_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMeta) ProtoMessage() {}

func (x *FileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMeta.ProtoReflect.Descriptor instead.
func (*FileMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{10}
}

func (x *FileMeta) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileMeta) GetCommitId() uint32 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

func (x *FileMeta) GetCommitSpec() *commit.CommitSpec {
	if x != nil {
		return x.CommitSpec
	}
	return nil
}

func (x *FileMeta) GetConfigItemSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.ConfigItemSpec
	}
	return nil
}

func (x *FileMeta) GetConfigItemAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.ConfigItemAttachment
	}
	return nil
}

func (x *FileMeta) GetRepositorySpec() *RepositorySpec {
	if x != nil {
		return x.RepositorySpec
	}
	return nil
}

func (x *FileMeta) GetConfigItemRevision() *base.Revision {
	if x != nil {
		return x.ConfigItemRevision
	}
	return nil
}

type PullAppFileMetaReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	// refer to sfs.SideWatchPayload.
	BizId         uint32   `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta       *AppMeta `protobuf:"bytes,3,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Token         string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Key           string   `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Match         []string `protobuf:"bytes,6,rep,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullAppFileMetaReq) Reset() {
	*x = PullAppFileMetaReq{}
	mi := &file_feed_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAppFileMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAppFileMetaReq) ProtoMessage() {}

func (x *PullAppFileMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAppFileMetaReq.ProtoReflect.Descriptor instead.
func (*PullAppFileMetaReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{11}
}

func (x *PullAppFileMetaReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *PullAppFileMetaReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PullAppFileMetaReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *PullAppFileMetaReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PullAppFileMetaReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PullAppFileMetaReq) GetMatch() []string {
	if x != nil {
		return x.Match
	}
	return nil
}

type PullAppFileMetaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReleaseId     uint32                 `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	ReleaseName   string                 `protobuf:"bytes,6,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Repository    *Repository            `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	FileMetas     []*FileMeta            `protobuf:"bytes,3,rep,name=file_metas,json=fileMetas,proto3" json:"file_metas,omitempty"`
	PreHook       *hook.HookSpec         `protobuf:"bytes,4,opt,name=pre_hook,json=preHook,proto3" json:"pre_hook,omitempty"`
	PostHook      *hook.HookSpec         `protobuf:"bytes,5,opt,name=post_hook,json=postHook,proto3" json:"post_hook,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullAppFileMetaResp) Reset() {
	*x = PullAppFileMetaResp{}
	mi := &file_feed_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAppFileMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAppFileMetaResp) ProtoMessage() {}

func (x *PullAppFileMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAppFileMetaResp.ProtoReflect.Descriptor instead.
func (*PullAppFileMetaResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{12}
}

func (x *PullAppFileMetaResp) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *PullAppFileMetaResp) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *PullAppFileMetaResp) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *PullAppFileMetaResp) GetFileMetas() []*FileMeta {
	if x != nil {
		return x.FileMetas
	}
	return nil
}

func (x *PullAppFileMetaResp) GetPreHook() *hook.HookSpec {
	if x != nil {
		return x.PreHook
	}
	return nil
}

func (x *PullAppFileMetaResp) GetPostHook() *hook.HookSpec {
	if x != nil {
		return x.PostHook
	}
	return nil
}

type GetDownloadURLReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version defines message's protocol version from sidecar
	ApiVersion    *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	BizId         uint32           `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	FileMeta      *FileMeta        `protobuf:"bytes,3,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"`
	Token         string           `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadURLReq) Reset() {
	*x = GetDownloadURLReq{}
	mi := &file_feed_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadURLReq) ProtoMessage() {}

func (x *GetDownloadURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadURLReq.ProtoReflect.Descriptor instead.
func (*GetDownloadURLReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{13}
}

func (x *GetDownloadURLReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *GetDownloadURLReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetDownloadURLReq) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

func (x *GetDownloadURLReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetDownloadURLResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                       // compatible with old versions
	WaitTimeMil   int64                  `protobuf:"varint,2,opt,name=wait_time_mil,json=waitTimeMil,proto3" json:"wait_time_mil,omitempty"` // the time(milliseconds) that the client should wait before downloading file
	Urls          []string               `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`                                     // used for high availability
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadURLResp) Reset() {
	*x = GetDownloadURLResp{}
	mi := &file_feed_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadURLResp) ProtoMessage() {}

func (x *GetDownloadURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadURLResp.ProtoReflect.Descriptor instead.
func (*GetDownloadURLResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{14}
}

func (x *GetDownloadURLResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetDownloadURLResp) GetWaitTimeMil() int64 {
	if x != nil {
		return x.WaitTimeMil
	}
	return 0
}

func (x *GetDownloadURLResp) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

// App 对外简单版本
type App struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ConfigType    string                 `protobuf:"bytes,3,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"`
	Revision      *base.Revision         `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *App) Reset() {
	*x = App{}
	mi := &file_feed_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{15}
}

func (x *App) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *App) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

type ListAppsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Match         []string               `protobuf:"bytes,2,rep,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppsReq) Reset() {
	*x = ListAppsReq{}
	mi := &file_feed_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsReq) ProtoMessage() {}

func (x *ListAppsReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsReq.ProtoReflect.Descriptor instead.
func (*ListAppsReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{16}
}

func (x *ListAppsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListAppsReq) GetMatch() []string {
	if x != nil {
		return x.Match
	}
	return nil
}

type ListAppsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apps          []*App                 `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppsResp) Reset() {
	*x = ListAppsResp{}
	mi := &file_feed_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResp) ProtoMessage() {}

func (x *ListAppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResp.ProtoReflect.Descriptor instead.
func (*ListAppsResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{17}
}

func (x *ListAppsResp) GetApps() []*App {
	if x != nil {
		return x.Apps
	}
	return nil
}

type PullKvMetaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta       *AppMeta               `protobuf:"bytes,2,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Match         []string               `protobuf:"bytes,3,rep,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullKvMetaReq) Reset() {
	*x = PullKvMetaReq{}
	mi := &file_feed_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullKvMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullKvMetaReq) ProtoMessage() {}

func (x *PullKvMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullKvMetaReq.ProtoReflect.Descriptor instead.
func (*PullKvMetaReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{18}
}

func (x *PullKvMetaReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PullKvMetaReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *PullKvMetaReq) GetMatch() []string {
	if x != nil {
		return x.Match
	}
	return nil
}

type PullKvMetaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReleaseId     uint32                 `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	KvMetas       []*KvMeta              `protobuf:"bytes,3,rep,name=kv_metas,json=kvMetas,proto3" json:"kv_metas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullKvMetaResp) Reset() {
	*x = PullKvMetaResp{}
	mi := &file_feed_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullKvMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullKvMetaResp) ProtoMessage() {}

func (x *PullKvMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullKvMetaResp.ProtoReflect.Descriptor instead.
func (*PullKvMetaResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{19}
}

func (x *PullKvMetaResp) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *PullKvMetaResp) GetKvMetas() []*KvMeta {
	if x != nil {
		return x.KvMetas
	}
	return nil
}

type KvMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	KvType        string                 `protobuf:"bytes,2,opt,name=kv_type,json=kvType,proto3" json:"kv_type,omitempty"`
	Revision      *base.Revision         `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	KvAttachment  *kv.KvAttachment       `protobuf:"bytes,4,opt,name=kv_attachment,json=kvAttachment,proto3" json:"kv_attachment,omitempty"`
	ContentSpec   *content.ContentSpec   `protobuf:"bytes,5,opt,name=content_spec,json=contentSpec,proto3" json:"content_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KvMeta) Reset() {
	*x = KvMeta{}
	mi := &file_feed_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KvMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvMeta) ProtoMessage() {}

func (x *KvMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvMeta.ProtoReflect.Descriptor instead.
func (*KvMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{20}
}

func (x *KvMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KvMeta) GetKvType() string {
	if x != nil {
		return x.KvType
	}
	return ""
}

func (x *KvMeta) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *KvMeta) GetKvAttachment() *kv.KvAttachment {
	if x != nil {
		return x.KvAttachment
	}
	return nil
}

func (x *KvMeta) GetContentSpec() *content.ContentSpec {
	if x != nil {
		return x.ContentSpec
	}
	return nil
}

type GetKvValueReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta       *AppMeta               `protobuf:"bytes,2,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKvValueReq) Reset() {
	*x = GetKvValueReq{}
	mi := &file_feed_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKvValueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKvValueReq) ProtoMessage() {}

func (x *GetKvValueReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKvValueReq.ProtoReflect.Descriptor instead.
func (*GetKvValueReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{21}
}

func (x *GetKvValueReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetKvValueReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *GetKvValueReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetKvValueResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KvType        string                 `protobuf:"bytes,1,opt,name=kv_type,json=kvType,proto3" json:"kv_type,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKvValueResp) Reset() {
	*x = GetKvValueResp{}
	mi := &file_feed_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKvValueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKvValueResp) ProtoMessage() {}

func (x *GetKvValueResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKvValueResp.ProtoReflect.Descriptor instead.
func (*GetKvValueResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{22}
}

func (x *GetKvValueResp) GetKvType() string {
	if x != nil {
		return x.KvType
	}
	return ""
}

func (x *GetKvValueResp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AsyncDownloadReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	BkAgentId     string                 `protobuf:"bytes,2,opt,name=bk_agent_id,json=bkAgentId,proto3" json:"bk_agent_id,omitempty"`
	ClusterId     string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	PodId         string                 `protobuf:"bytes,4,opt,name=pod_id,json=podId,proto3" json:"pod_id,omitempty"`
	ContainerName string                 `protobuf:"bytes,5,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	FileMeta      *FileMeta              `protobuf:"bytes,6,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"`
	// file_dir is the client/agent directory where the file will be downloaded to.
	FileDir       string `protobuf:"bytes,7,opt,name=file_dir,json=fileDir,proto3" json:"file_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncDownloadReq) Reset() {
	*x = AsyncDownloadReq{}
	mi := &file_feed_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncDownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncDownloadReq) ProtoMessage() {}

func (x *AsyncDownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncDownloadReq.ProtoReflect.Descriptor instead.
func (*AsyncDownloadReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{23}
}

func (x *AsyncDownloadReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AsyncDownloadReq) GetBkAgentId() string {
	if x != nil {
		return x.BkAgentId
	}
	return ""
}

func (x *AsyncDownloadReq) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AsyncDownloadReq) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

func (x *AsyncDownloadReq) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *AsyncDownloadReq) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

func (x *AsyncDownloadReq) GetFileDir() string {
	if x != nil {
		return x.FileDir
	}
	return ""
}

type AsyncDownloadResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncDownloadResp) Reset() {
	*x = AsyncDownloadResp{}
	mi := &file_feed_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncDownloadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncDownloadResp) ProtoMessage() {}

func (x *AsyncDownloadResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncDownloadResp.ProtoReflect.Descriptor instead.
func (*AsyncDownloadResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{24}
}

func (x *AsyncDownloadResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type AsyncDownloadStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncDownloadStatusReq) Reset() {
	*x = AsyncDownloadStatusReq{}
	mi := &file_feed_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncDownloadStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncDownloadStatusReq) ProtoMessage() {}

func (x *AsyncDownloadStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncDownloadStatusReq.ProtoReflect.Descriptor instead.
func (*AsyncDownloadStatusReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{25}
}

func (x *AsyncDownloadStatusReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AsyncDownloadStatusReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type AsyncDownloadStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        AsyncDownloadStatus    `protobuf:"varint,1,opt,name=status,proto3,enum=pbfs.AsyncDownloadStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncDownloadStatusResp) Reset() {
	*x = AsyncDownloadStatusResp{}
	mi := &file_feed_server_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncDownloadStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncDownloadStatusResp) ProtoMessage() {}

func (x *AsyncDownloadStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncDownloadStatusResp.ProtoReflect.Descriptor instead.
func (*AsyncDownloadStatusResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{26}
}

func (x *AsyncDownloadStatusResp) GetStatus() AsyncDownloadStatus {
	if x != nil {
		return x.Status
	}
	return AsyncDownloadStatus_SUCCESS
}

type GetSingleKvValueReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         uint32                 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta       *AppMeta               `protobuf:"bytes,2,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingleKvValueReq) Reset() {
	*x = GetSingleKvValueReq{}
	mi := &file_feed_server_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingleKvValueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleKvValueReq) ProtoMessage() {}

func (x *GetSingleKvValueReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleKvValueReq.ProtoReflect.Descriptor instead.
func (*GetSingleKvValueReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{27}
}

func (x *GetSingleKvValueReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetSingleKvValueReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *GetSingleKvValueReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetSingleKvValueResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingleKvValueResp) Reset() {
	*x = GetSingleKvValueResp{}
	mi := &file_feed_server_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingleKvValueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleKvValueResp) ProtoMessage() {}

func (x *GetSingleKvValueResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleKvValueResp.ProtoReflect.Descriptor instead.
func (*GetSingleKvValueResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{28}
}

func (x *GetSingleKvValueResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetSingleKvMetaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *KvMeta                `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingleKvMetaResp) Reset() {
	*x = GetSingleKvMetaResp{}
	mi := &file_feed_server_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingleKvMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleKvMetaResp) ProtoMessage() {}

func (x *GetSingleKvMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleKvMetaResp.ProtoReflect.Descriptor instead.
func (*GetSingleKvMetaResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{29}
}

func (x *GetSingleKvMetaResp) GetData() *KvMeta {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSingleFileContentReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	// refer to sfs.SideWatchPayload.
	BizId         uint32   `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta       *AppMeta `protobuf:"bytes,3,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	FilePath      string   `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Token         string   `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingleFileContentReq) Reset() {
	*x = GetSingleFileContentReq{}
	mi := &file_feed_server_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingleFileContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleFileContentReq) ProtoMessage() {}

func (x *GetSingleFileContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleFileContentReq.ProtoReflect.Descriptor instead.
func (*GetSingleFileContentReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{30}
}

func (x *GetSingleFileContentReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *GetSingleFileContentReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetSingleFileContentReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *GetSingleFileContentReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetSingleFileContentReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SingleFileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContentLength int64                  `protobuf:"varint,2,opt,name=content_length,json=contentLength,proto3" json:"content_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleFileChunk) Reset() {
	*x = SingleFileChunk{}
	mi := &file_feed_server_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleFileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleFileChunk) ProtoMessage() {}

func (x *SingleFileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleFileChunk.ProtoReflect.Descriptor instead.
func (*SingleFileChunk) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{31}
}

func (x *SingleFileChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SingleFileChunk) GetContentLength() int64 {
	if x != nil {
		return x.ContentLength
	}
	return 0
}

var File_feed_server_proto protoreflect.FileDescriptor

const file_feed_server_proto_rawDesc = "" +
	"\n" +
	"\x11feed_server.proto\x12\x04pbfs\x1a!pkg/protocol/core/base/base.proto\x1a%pkg/protocol/core/commit/commit.proto\x1a/pkg/protocol/core/config-item/config_item.proto\x1a!pkg/protocol/core/hook/hook.proto\x1a\x1epkg/protocol/core/kv/kvs.proto\x1a'pkg/protocol/core/content/content.proto\x1a\x1cgoogle/api/annotations.proto\"R\n" +
	"\vSidecarSpec\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12,\n" +
	"\aversion\x18\x02 \x01(\v2\x12.pbbase.VersioningR\aversion\"n\n" +
	"\x10HandshakeMessage\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12%\n" +
	"\x04spec\x18\x02 \x01(\v2\x11.pbfs.SidecarSpecR\x04spec\"^\n" +
	"\rHandshakeResp\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"\x84\x01\n" +
	"\rMessagingMeta\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x10\n" +
	"\x03rid\x18\x02 \x01(\tR\x03rid\x12\x12\n" +
	"\x04type\x18\x03 \x01(\rR\x04type\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\"\x0f\n" +
	"\rMessagingResp\"^\n" +
	"\rSideWatchMeta\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"\x87\x01\n" +
	"\x10FeedWatchMessage\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x10\n" +
	"\x03rid\x18\x02 \x01(\tR\x03rid\x12\x12\n" +
	"\x04type\x18\x03 \x01(\rR\x04type\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\"\x9b\x01\n" +
	"\aAppMeta\x12\x10\n" +
	"\x03app\x18\x01 \x01(\tR\x03app\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\tR\x03uid\x121\n" +
	"\x06labels\x18\x03 \x03(\v2\x19.pbfs.AppMeta.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\" \n" +
	"\n" +
	"Repository\x12\x12\n" +
	"\x04root\x18\x01 \x01(\tR\x04root\"$\n" +
	"\x0eRepositorySpec\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\x83\x03\n" +
	"\bFileMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\tcommit_id\x18\x02 \x01(\rR\bcommitId\x125\n" +
	"\vcommit_spec\x18\x03 \x01(\v2\x14.pbcommit.CommitSpecR\n" +
	"commitSpec\x12>\n" +
	"\x10config_item_spec\x18\x04 \x01(\v2\x14.pbci.ConfigItemSpecR\x0econfigItemSpec\x12P\n" +
	"\x16config_item_attachment\x18\x05 \x01(\v2\x1a.pbci.ConfigItemAttachmentR\x14configItemAttachment\x12=\n" +
	"\x0frepository_spec\x18\x06 \x01(\v2\x14.pbfs.RepositorySpecR\x0erepositorySpec\x12B\n" +
	"\x14config_item_revision\x18\a \x01(\v2\x10.pbbase.RevisionR\x12configItemRevision\"\xc8\x01\n" +
	"\x12PullAppFileMetaReq\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\rR\x05bizId\x12(\n" +
	"\bapp_meta\x18\x03 \x01(\v2\r.pbfs.AppMetaR\aappMeta\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x10\n" +
	"\x03key\x18\x05 \x01(\tR\x03key\x12\x14\n" +
	"\x05match\x18\x06 \x03(\tR\x05match\"\x94\x02\n" +
	"\x13PullAppFileMetaResp\x12\x1d\n" +
	"\n" +
	"release_id\x18\x01 \x01(\rR\treleaseId\x12!\n" +
	"\frelease_name\x18\x06 \x01(\tR\vreleaseName\x120\n" +
	"\n" +
	"repository\x18\x02 \x01(\v2\x10.pbfs.RepositoryR\n" +
	"repository\x12-\n" +
	"\n" +
	"file_metas\x18\x03 \x03(\v2\x0e.pbfs.FileMetaR\tfileMetas\x12+\n" +
	"\bpre_hook\x18\x04 \x01(\v2\x10.pbhook.HookSpecR\apreHook\x12-\n" +
	"\tpost_hook\x18\x05 \x01(\v2\x10.pbhook.HookSpecR\bpostHook\"\xa2\x01\n" +
	"\x11GetDownloadURLReq\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\rR\x05bizId\x12+\n" +
	"\tfile_meta\x18\x03 \x01(\v2\x0e.pbfs.FileMetaR\bfileMeta\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\"^\n" +
	"\x12GetDownloadURLResp\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\"\n" +
	"\rwait_time_mil\x18\x02 \x01(\x03R\vwaitTimeMil\x12\x12\n" +
	"\x04urls\x18\x03 \x03(\tR\x04urls\"x\n" +
	"\x03App\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vconfig_type\x18\x03 \x01(\tR\n" +
	"configType\x12,\n" +
	"\brevision\x18\x04 \x01(\v2\x10.pbbase.RevisionR\brevision\":\n" +
	"\vListAppsReq\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12\x14\n" +
	"\x05match\x18\x02 \x03(\tR\x05match\"-\n" +
	"\fListAppsResp\x12\x1d\n" +
	"\x04apps\x18\x01 \x03(\v2\t.pbfs.AppR\x04apps\"f\n" +
	"\rPullKvMetaReq\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12(\n" +
	"\bapp_meta\x18\x02 \x01(\v2\r.pbfs.AppMetaR\aappMeta\x12\x14\n" +
	"\x05match\x18\x03 \x03(\tR\x05match\"X\n" +
	"\x0ePullKvMetaResp\x12\x1d\n" +
	"\n" +
	"release_id\x18\x01 \x01(\rR\treleaseId\x12'\n" +
	"\bkv_metas\x18\x03 \x03(\v2\f.pbfs.KvMetaR\akvMetas\"\xd5\x01\n" +
	"\x06KvMeta\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x17\n" +
	"\akv_type\x18\x02 \x01(\tR\x06kvType\x12,\n" +
	"\brevision\x18\x03 \x01(\v2\x10.pbbase.RevisionR\brevision\x127\n" +
	"\rkv_attachment\x18\x04 \x01(\v2\x12.pbkv.KvAttachmentR\fkvAttachment\x129\n" +
	"\fcontent_spec\x18\x05 \x01(\v2\x16.pbcontent.ContentSpecR\vcontentSpec\"b\n" +
	"\rGetKvValueReq\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12(\n" +
	"\bapp_meta\x18\x02 \x01(\v2\r.pbfs.AppMetaR\aappMeta\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"?\n" +
	"\x0eGetKvValueResp\x12\x17\n" +
	"\akv_type\x18\x01 \x01(\tR\x06kvType\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xee\x01\n" +
	"\x10AsyncDownloadReq\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12\x1e\n" +
	"\vbk_agent_id\x18\x02 \x01(\tR\tbkAgentId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12\x15\n" +
	"\x06pod_id\x18\x04 \x01(\tR\x05podId\x12%\n" +
	"\x0econtainer_name\x18\x05 \x01(\tR\rcontainerName\x12+\n" +
	"\tfile_meta\x18\x06 \x01(\v2\x0e.pbfs.FileMetaR\bfileMeta\x12\x19\n" +
	"\bfile_dir\x18\a \x01(\tR\afileDir\",\n" +
	"\x11AsyncDownloadResp\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"H\n" +
	"\x16AsyncDownloadStatusReq\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\"L\n" +
	"\x17AsyncDownloadStatusResp\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.pbfs.AsyncDownloadStatusR\x06status\"h\n" +
	"\x13GetSingleKvValueReq\x12\x15\n" +
	"\x06biz_id\x18\x01 \x01(\rR\x05bizId\x12(\n" +
	"\bapp_meta\x18\x02 \x01(\v2\r.pbfs.AppMetaR\aappMeta\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"*\n" +
	"\x14GetSingleKvValueResp\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"7\n" +
	"\x13GetSingleKvMetaResp\x12 \n" +
	"\x04data\x18\x01 \x01(\v2\f.pbfs.KvMetaR\x04data\"\xc2\x01\n" +
	"\x17GetSingleFileContentReq\x123\n" +
	"\vapi_version\x18\x01 \x01(\v2\x12.pbbase.VersioningR\n" +
	"apiVersion\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\rR\x05bizId\x12(\n" +
	"\bapp_meta\x18\x03 \x01(\v2\r.pbfs.AppMetaR\aappMeta\x12\x1b\n" +
	"\tfile_path\x18\x04 \x01(\tR\bfilePath\x12\x14\n" +
	"\x05token\x18\x05 \x01(\tR\x05token\"R\n" +
	"\x0fSingleFileChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12%\n" +
	"\x0econtent_length\x18\x02 \x01(\x03R\rcontentLength*?\n" +
	"\x13AsyncDownloadStatus\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\x0f\n" +
	"\vDOWNLOADING\x10\x01\x12\n" +
	"\n" +
	"\x06FAILED\x10\x022\xc9\b\n" +
	"\bUpstream\x12:\n" +
	"\tHandshake\x12\x16.pbfs.HandshakeMessage\x1a\x13.pbfs.HandshakeResp\"\x00\x127\n" +
	"\tMessaging\x12\x13.pbfs.MessagingMeta\x1a\x13.pbfs.MessagingResp\"\x00\x128\n" +
	"\x05Watch\x12\x13.pbfs.SideWatchMeta\x1a\x16.pbfs.FeedWatchMessage\"\x000\x01\x12H\n" +
	"\x0fPullAppFileMeta\x12\x18.pbfs.PullAppFileMetaReq\x1a\x19.pbfs.PullAppFileMetaResp\"\x00\x12E\n" +
	"\x0eGetDownloadURL\x12\x17.pbfs.GetDownloadURLReq\x1a\x18.pbfs.GetDownloadURLResp\"\x00\x12j\n" +
	"\n" +
	"PullKvMeta\x12\x13.pbfs.PullKvMetaReq\x1a\x14.pbfs.PullKvMetaResp\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/api/v1/feed/biz/{biz_id}/kvs/metadata\x12l\n" +
	"\n" +
	"GetKvValue\x12\x13.pbfs.GetKvValueReq\x1a\x14.pbfs.GetKvValueResp\"3\x82\xd3\xe4\x93\x02-:\x01*\"(/api/v1/feed/biz/{biz_id}/kvs/data/{key}\x123\n" +
	"\bListApps\x12\x11.pbfs.ListAppsReq\x1a\x12.pbfs.ListAppsResp\"\x00\x12B\n" +
	"\rAsyncDownload\x12\x16.pbfs.AsyncDownloadReq\x1a\x17.pbfs.AsyncDownloadResp\"\x00\x12T\n" +
	"\x13AsyncDownloadStatus\x12\x1c.pbfs.AsyncDownloadStatusReq\x1a\x1d.pbfs.AsyncDownloadStatusResp\"\x00\x12\x7f\n" +
	"\x10GetSingleKvValue\x12\x19.pbfs.GetSingleKvValueReq\x1a\x1a.pbfs.GetSingleKvValueResp\"4\x82\xd3\xe4\x93\x02.:\x01*\")/api/v1/feed/biz/{biz_id}/kvs/value/{key}\x12\x80\x01\n" +
	"\x0fGetSingleKvMeta\x12\x19.pbfs.GetSingleKvValueReq\x1a\x19.pbfs.GetSingleKvMetaResp\"7\x82\xd3\xe4\x93\x021:\x01*\",/api/v1/feed/biz/{biz_id}/kvs/metadata/{key}\x12P\n" +
	"\x14GetSingleFileContent\x12\x1d.pbfs.GetSingleFileContentReq\x1a\x15.pbfs.SingleFileChunk\"\x000\x01BBZ@github.com/TencentBlueKing/bk-bscp/pkg/protocol/feed-server;pbfsb\x06proto3"

var (
	file_feed_server_proto_rawDescOnce sync.Once
	file_feed_server_proto_rawDescData []byte
)

func file_feed_server_proto_rawDescGZIP() []byte {
	file_feed_server_proto_rawDescOnce.Do(func() {
		file_feed_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_feed_server_proto_rawDesc), len(file_feed_server_proto_rawDesc)))
	})
	return file_feed_server_proto_rawDescData
}

var file_feed_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_feed_server_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_feed_server_proto_goTypes = []any{
	(AsyncDownloadStatus)(0),                 // 0: pbfs.AsyncDownloadStatus
	(*SidecarSpec)(nil),                      // 1: pbfs.SidecarSpec
	(*HandshakeMessage)(nil),                 // 2: pbfs.HandshakeMessage
	(*HandshakeResp)(nil),                    // 3: pbfs.HandshakeResp
	(*MessagingMeta)(nil),                    // 4: pbfs.MessagingMeta
	(*MessagingResp)(nil),                    // 5: pbfs.MessagingResp
	(*SideWatchMeta)(nil),                    // 6: pbfs.SideWatchMeta
	(*FeedWatchMessage)(nil),                 // 7: pbfs.FeedWatchMessage
	(*AppMeta)(nil),                          // 8: pbfs.AppMeta
	(*Repository)(nil),                       // 9: pbfs.Repository
	(*RepositorySpec)(nil),                   // 10: pbfs.RepositorySpec
	(*FileMeta)(nil),                         // 11: pbfs.FileMeta
	(*PullAppFileMetaReq)(nil),               // 12: pbfs.PullAppFileMetaReq
	(*PullAppFileMetaResp)(nil),              // 13: pbfs.PullAppFileMetaResp
	(*GetDownloadURLReq)(nil),                // 14: pbfs.GetDownloadURLReq
	(*GetDownloadURLResp)(nil),               // 15: pbfs.GetDownloadURLResp
	(*App)(nil),                              // 16: pbfs.App
	(*ListAppsReq)(nil),                      // 17: pbfs.ListAppsReq
	(*ListAppsResp)(nil),                     // 18: pbfs.ListAppsResp
	(*PullKvMetaReq)(nil),                    // 19: pbfs.PullKvMetaReq
	(*PullKvMetaResp)(nil),                   // 20: pbfs.PullKvMetaResp
	(*KvMeta)(nil),                           // 21: pbfs.KvMeta
	(*GetKvValueReq)(nil),                    // 22: pbfs.GetKvValueReq
	(*GetKvValueResp)(nil),                   // 23: pbfs.GetKvValueResp
	(*AsyncDownloadReq)(nil),                 // 24: pbfs.AsyncDownloadReq
	(*AsyncDownloadResp)(nil),                // 25: pbfs.AsyncDownloadResp
	(*AsyncDownloadStatusReq)(nil),           // 26: pbfs.AsyncDownloadStatusReq
	(*AsyncDownloadStatusResp)(nil),          // 27: pbfs.AsyncDownloadStatusResp
	(*GetSingleKvValueReq)(nil),              // 28: pbfs.GetSingleKvValueReq
	(*GetSingleKvValueResp)(nil),             // 29: pbfs.GetSingleKvValueResp
	(*GetSingleKvMetaResp)(nil),              // 30: pbfs.GetSingleKvMetaResp
	(*GetSingleFileContentReq)(nil),          // 31: pbfs.GetSingleFileContentReq
	(*SingleFileChunk)(nil),                  // 32: pbfs.SingleFileChunk
	nil,                                      // 33: pbfs.AppMeta.LabelsEntry
	(*base.Versioning)(nil),                  // 34: pbbase.Versioning
	(*commit.CommitSpec)(nil),                // 35: pbcommit.CommitSpec
	(*config_item.ConfigItemSpec)(nil),       // 36: pbci.ConfigItemSpec
	(*config_item.ConfigItemAttachment)(nil), // 37: pbci.ConfigItemAttachment
	(*base.Revision)(nil),                    // 38: pbbase.Revision
	(*hook.HookSpec)(nil),                    // 39: pbhook.HookSpec
	(*kv.KvAttachment)(nil),                  // 40: pbkv.KvAttachment
	(*content.ContentSpec)(nil),              // 41: pbcontent.ContentSpec
}
var file_feed_server_proto_depIdxs = []int32{
	34, // 0: pbfs.SidecarSpec.version:type_name -> pbbase.Versioning
	34, // 1: pbfs.HandshakeMessage.api_version:type_name -> pbbase.Versioning
	1,  // 2: pbfs.HandshakeMessage.spec:type_name -> pbfs.SidecarSpec
	34, // 3: pbfs.HandshakeResp.api_version:type_name -> pbbase.Versioning
	34, // 4: pbfs.MessagingMeta.api_version:type_name -> pbbase.Versioning
	34, // 5: pbfs.SideWatchMeta.api_version:type_name -> pbbase.Versioning
	34, // 6: pbfs.FeedWatchMessage.api_version:type_name -> pbbase.Versioning
	33, // 7: pbfs.AppMeta.labels:type_name -> pbfs.AppMeta.LabelsEntry
	35, // 8: pbfs.FileMeta.commit_spec:type_name -> pbcommit.CommitSpec
	36, // 9: pbfs.FileMeta.config_item_spec:type_name -> pbci.ConfigItemSpec
	37, // 10: pbfs.FileMeta.config_item_attachment:type_name -> pbci.ConfigItemAttachment
	10, // 11: pbfs.FileMeta.repository_spec:type_name -> pbfs.RepositorySpec
	38, // 12: pbfs.FileMeta.config_item_revision:type_name -> pbbase.Revision
	34, // 13: pbfs.PullAppFileMetaReq.api_version:type_name -> pbbase.Versioning
	8,  // 14: pbfs.PullAppFileMetaReq.app_meta:type_name -> pbfs.AppMeta
	9,  // 15: pbfs.PullAppFileMetaResp.repository:type_name -> pbfs.Repository
	11, // 16: pbfs.PullAppFileMetaResp.file_metas:type_name -> pbfs.FileMeta
	39, // 17: pbfs.PullAppFileMetaResp.pre_hook:type_name -> pbhook.HookSpec
	39, // 18: pbfs.PullAppFileMetaResp.post_hook:type_name -> pbhook.HookSpec
	34, // 19: pbfs.GetDownloadURLReq.api_version:type_name -> pbbase.Versioning
	11, // 20: pbfs.GetDownloadURLReq.file_meta:type_name -> pbfs.FileMeta
	38, // 21: pbfs.App.revision:type_name -> pbbase.Revision
	16, // 22: pbfs.ListAppsResp.apps:type_name -> pbfs.App
	8,  // 23: pbfs.PullKvMetaReq.app_meta:type_name -> pbfs.AppMeta
	21, // 24: pbfs.PullKvMetaResp.kv_metas:type_name -> pbfs.KvMeta
	38, // 25: pbfs.KvMeta.revision:type_name -> pbbase.Revision
	40, // 26: pbfs.KvMeta.kv_attachment:type_name -> pbkv.KvAttachment
	41, // 27: pbfs.KvMeta.content_spec:type_name -> pbcontent.ContentSpec
	8,  // 28: pbfs.GetKvValueReq.app_meta:type_name -> pbfs.AppMeta
	11, // 29: pbfs.AsyncDownloadReq.file_meta:type_name -> pbfs.FileMeta
	0,  // 30: pbfs.AsyncDownloadStatusResp.status:type_name -> pbfs.AsyncDownloadStatus
	8,  // 31: pbfs.GetSingleKvValueReq.app_meta:type_name -> pbfs.AppMeta
	21, // 32: pbfs.GetSingleKvMetaResp.data:type_name -> pbfs.KvMeta
	34, // 33: pbfs.GetSingleFileContentReq.api_version:type_name -> pbbase.Versioning
	8,  // 34: pbfs.GetSingleFileContentReq.app_meta:type_name -> pbfs.AppMeta
	2,  // 35: pbfs.Upstream.Handshake:input_type -> pbfs.HandshakeMessage
	4,  // 36: pbfs.Upstream.Messaging:input_type -> pbfs.MessagingMeta
	6,  // 37: pbfs.Upstream.Watch:input_type -> pbfs.SideWatchMeta
	12, // 38: pbfs.Upstream.PullAppFileMeta:input_type -> pbfs.PullAppFileMetaReq
	14, // 39: pbfs.Upstream.GetDownloadURL:input_type -> pbfs.GetDownloadURLReq
	19, // 40: pbfs.Upstream.PullKvMeta:input_type -> pbfs.PullKvMetaReq
	22, // 41: pbfs.Upstream.GetKvValue:input_type -> pbfs.GetKvValueReq
	17, // 42: pbfs.Upstream.ListApps:input_type -> pbfs.ListAppsReq
	24, // 43: pbfs.Upstream.AsyncDownload:input_type -> pbfs.AsyncDownloadReq
	26, // 44: pbfs.Upstream.AsyncDownloadStatus:input_type -> pbfs.AsyncDownloadStatusReq
	28, // 45: pbfs.Upstream.GetSingleKvValue:input_type -> pbfs.GetSingleKvValueReq
	28, // 46: pbfs.Upstream.GetSingleKvMeta:input_type -> pbfs.GetSingleKvValueReq
	31, // 47: pbfs.Upstream.GetSingleFileContent:input_type -> pbfs.GetSingleFileContentReq
	3,  // 48: pbfs.Upstream.Handshake:output_type -> pbfs.HandshakeResp
	5,  // 49: pbfs.Upstream.Messaging:output_type -> pbfs.MessagingResp
	7,  // 50: pbfs.Upstream.Watch:output_type -> pbfs.FeedWatchMessage
	13, // 51: pbfs.Upstream.PullAppFileMeta:output_type -> pbfs.PullAppFileMetaResp
	15, // 52: pbfs.Upstream.GetDownloadURL:output_type -> pbfs.GetDownloadURLResp
	20, // 53: pbfs.Upstream.PullKvMeta:output_type -> pbfs.PullKvMetaResp
	23, // 54: pbfs.Upstream.GetKvValue:output_type -> pbfs.GetKvValueResp
	18, // 55: pbfs.Upstream.ListApps:output_type -> pbfs.ListAppsResp
	25, // 56: pbfs.Upstream.AsyncDownload:output_type -> pbfs.AsyncDownloadResp
	27, // 57: pbfs.Upstream.AsyncDownloadStatus:output_type -> pbfs.AsyncDownloadStatusResp
	29, // 58: pbfs.Upstream.GetSingleKvValue:output_type -> pbfs.GetSingleKvValueResp
	30, // 59: pbfs.Upstream.GetSingleKvMeta:output_type -> pbfs.GetSingleKvMetaResp
	32, // 60: pbfs.Upstream.GetSingleFileContent:output_type -> pbfs.SingleFileChunk
	48, // [48:61] is the sub-list for method output_type
	35, // [35:48] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_feed_server_proto_init() }
func file_feed_server_proto_init() {
	if File_feed_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_feed_server_proto_rawDesc), len(file_feed_server_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feed_server_proto_goTypes,
		DependencyIndexes: file_feed_server_proto_depIdxs,
		EnumInfos:         file_feed_server_proto_enumTypes,
		MessageInfos:      file_feed_server_proto_msgTypes,
	}.Build()
	File_feed_server_proto = out.File
	file_feed_server_proto_goTypes = nil
	file_feed_server_proto_depIdxs = nil
}
